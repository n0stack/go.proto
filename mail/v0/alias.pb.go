// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mail/v0/alias.proto

package pmail // import "github.com/n0stack/proto.go/mail/v0"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Alias struct {
	Address              string   `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	Members              []string `protobuf:"bytes,2,rep,name=members" json:"members,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Alias) Reset()         { *m = Alias{} }
func (m *Alias) String() string { return proto.CompactTextString(m) }
func (*Alias) ProtoMessage()    {}
func (*Alias) Descriptor() ([]byte, []int) {
	return fileDescriptor_alias_ed0348b4dd34813f, []int{0}
}
func (m *Alias) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Alias.Unmarshal(m, b)
}
func (m *Alias) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Alias.Marshal(b, m, deterministic)
}
func (dst *Alias) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Alias.Merge(dst, src)
}
func (m *Alias) XXX_Size() int {
	return xxx_messageInfo_Alias.Size(m)
}
func (m *Alias) XXX_DiscardUnknown() {
	xxx_messageInfo_Alias.DiscardUnknown(m)
}

var xxx_messageInfo_Alias proto.InternalMessageInfo

func (m *Alias) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Alias) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

type ListAliasesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAliasesRequest) Reset()         { *m = ListAliasesRequest{} }
func (m *ListAliasesRequest) String() string { return proto.CompactTextString(m) }
func (*ListAliasesRequest) ProtoMessage()    {}
func (*ListAliasesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_alias_ed0348b4dd34813f, []int{1}
}
func (m *ListAliasesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAliasesRequest.Unmarshal(m, b)
}
func (m *ListAliasesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAliasesRequest.Marshal(b, m, deterministic)
}
func (dst *ListAliasesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAliasesRequest.Merge(dst, src)
}
func (m *ListAliasesRequest) XXX_Size() int {
	return xxx_messageInfo_ListAliasesRequest.Size(m)
}
func (m *ListAliasesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAliasesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListAliasesRequest proto.InternalMessageInfo

type ListAliasesResponse struct {
	Aliases              []*Alias `protobuf:"bytes,1,rep,name=aliases" json:"aliases,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAliasesResponse) Reset()         { *m = ListAliasesResponse{} }
func (m *ListAliasesResponse) String() string { return proto.CompactTextString(m) }
func (*ListAliasesResponse) ProtoMessage()    {}
func (*ListAliasesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_alias_ed0348b4dd34813f, []int{2}
}
func (m *ListAliasesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAliasesResponse.Unmarshal(m, b)
}
func (m *ListAliasesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAliasesResponse.Marshal(b, m, deterministic)
}
func (dst *ListAliasesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAliasesResponse.Merge(dst, src)
}
func (m *ListAliasesResponse) XXX_Size() int {
	return xxx_messageInfo_ListAliasesResponse.Size(m)
}
func (m *ListAliasesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAliasesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListAliasesResponse proto.InternalMessageInfo

func (m *ListAliasesResponse) GetAliases() []*Alias {
	if m != nil {
		return m.Aliases
	}
	return nil
}

type ApplyAliasRequest struct {
	Alias                *Alias   `protobuf:"bytes,1,opt,name=alias" json:"alias,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplyAliasRequest) Reset()         { *m = ApplyAliasRequest{} }
func (m *ApplyAliasRequest) String() string { return proto.CompactTextString(m) }
func (*ApplyAliasRequest) ProtoMessage()    {}
func (*ApplyAliasRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_alias_ed0348b4dd34813f, []int{3}
}
func (m *ApplyAliasRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyAliasRequest.Unmarshal(m, b)
}
func (m *ApplyAliasRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyAliasRequest.Marshal(b, m, deterministic)
}
func (dst *ApplyAliasRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyAliasRequest.Merge(dst, src)
}
func (m *ApplyAliasRequest) XXX_Size() int {
	return xxx_messageInfo_ApplyAliasRequest.Size(m)
}
func (m *ApplyAliasRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyAliasRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyAliasRequest proto.InternalMessageInfo

func (m *ApplyAliasRequest) GetAlias() *Alias {
	if m != nil {
		return m.Alias
	}
	return nil
}

func init() {
	proto.RegisterType((*Alias)(nil), "n0stack.mail.Alias")
	proto.RegisterType((*ListAliasesRequest)(nil), "n0stack.mail.ListAliasesRequest")
	proto.RegisterType((*ListAliasesResponse)(nil), "n0stack.mail.ListAliasesResponse")
	proto.RegisterType((*ApplyAliasRequest)(nil), "n0stack.mail.ApplyAliasRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AliasServiceClient is the client API for AliasService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AliasServiceClient interface {
	ListAliases(ctx context.Context, in *ListAliasesRequest, opts ...grpc.CallOption) (*ListAliasesResponse, error)
	ApplyAlias(ctx context.Context, in *ApplyAliasRequest, opts ...grpc.CallOption) (*Alias, error)
}

type aliasServiceClient struct {
	cc *grpc.ClientConn
}

func NewAliasServiceClient(cc *grpc.ClientConn) AliasServiceClient {
	return &aliasServiceClient{cc}
}

func (c *aliasServiceClient) ListAliases(ctx context.Context, in *ListAliasesRequest, opts ...grpc.CallOption) (*ListAliasesResponse, error) {
	out := new(ListAliasesResponse)
	err := c.cc.Invoke(ctx, "/n0stack.mail.AliasService/ListAliases", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aliasServiceClient) ApplyAlias(ctx context.Context, in *ApplyAliasRequest, opts ...grpc.CallOption) (*Alias, error) {
	out := new(Alias)
	err := c.cc.Invoke(ctx, "/n0stack.mail.AliasService/ApplyAlias", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AliasServiceServer is the server API for AliasService service.
type AliasServiceServer interface {
	ListAliases(context.Context, *ListAliasesRequest) (*ListAliasesResponse, error)
	ApplyAlias(context.Context, *ApplyAliasRequest) (*Alias, error)
}

func RegisterAliasServiceServer(s *grpc.Server, srv AliasServiceServer) {
	s.RegisterService(&_AliasService_serviceDesc, srv)
}

func _AliasService_ListAliases_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAliasesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AliasServiceServer).ListAliases(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.mail.AliasService/ListAliases",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AliasServiceServer).ListAliases(ctx, req.(*ListAliasesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AliasService_ApplyAlias_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyAliasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AliasServiceServer).ApplyAlias(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.mail.AliasService/ApplyAlias",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AliasServiceServer).ApplyAlias(ctx, req.(*ApplyAliasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AliasService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "n0stack.mail.AliasService",
	HandlerType: (*AliasServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListAliases",
			Handler:    _AliasService_ListAliases_Handler,
		},
		{
			MethodName: "ApplyAlias",
			Handler:    _AliasService_ApplyAlias_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mail/v0/alias.proto",
}

func init() { proto.RegisterFile("mail/v0/alias.proto", fileDescriptor_alias_ed0348b4dd34813f) }

var fileDescriptor_alias_ed0348b4dd34813f = []byte{
	// 284 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x91, 0x3f, 0x4f, 0xc3, 0x30,
	0x10, 0xc5, 0x1b, 0xaa, 0x52, 0x71, 0xed, 0x82, 0xcb, 0x10, 0x85, 0x81, 0xe0, 0xa9, 0x15, 0xc2,
	0xae, 0xca, 0x58, 0x09, 0xa9, 0xa8, 0x23, 0x53, 0x60, 0x62, 0x73, 0xd2, 0x23, 0x44, 0x24, 0xb5,
	0x89, 0x9d, 0x4a, 0xfd, 0x4a, 0x7c, 0x4a, 0x64, 0x3b, 0x15, 0x6d, 0xf9, 0xb3, 0xd9, 0xef, 0xbd,
	0x3b, 0xfd, 0x9e, 0x0e, 0x46, 0x95, 0x28, 0x4a, 0xbe, 0x99, 0x72, 0x51, 0x16, 0x42, 0x33, 0x55,
	0x4b, 0x23, 0xc9, 0x70, 0x3d, 0xd5, 0x46, 0x64, 0xef, 0xcc, 0x9a, 0xd1, 0x65, 0x2e, 0x65, 0x5e,
	0x22, 0x77, 0x5e, 0xda, 0xbc, 0x72, 0xac, 0x94, 0xd9, 0xfa, 0x28, 0x9d, 0x43, 0x6f, 0x61, 0x27,
	0x49, 0x08, 0x7d, 0xb1, 0x5a, 0xd5, 0xa8, 0x75, 0x18, 0xc4, 0xc1, 0xf8, 0x2c, 0xd9, 0x7d, 0xad,
	0x53, 0x61, 0x95, 0x62, 0xad, 0xc3, 0x93, 0xb8, 0x6b, 0x9d, 0xf6, 0x4b, 0x2f, 0x80, 0x3c, 0x16,
	0xda, 0xb8, 0x05, 0xa8, 0x13, 0xfc, 0x68, 0x50, 0x1b, 0xba, 0x84, 0xd1, 0x81, 0xaa, 0x95, 0x5c,
	0x6b, 0x24, 0xb7, 0xd0, 0x17, 0x5e, 0x0a, 0x83, 0xb8, 0x3b, 0x1e, 0xcc, 0x46, 0x6c, 0x1f, 0x93,
	0xb9, 0x7c, 0xb2, 0xcb, 0xd0, 0x7b, 0x38, 0x5f, 0x28, 0x55, 0x6e, 0xbd, 0xec, 0x57, 0x93, 0x09,
	0xf4, 0x9c, 0xef, 0x10, 0xff, 0xd8, 0xe0, 0x13, 0xb3, 0xcf, 0x00, 0x86, 0x4e, 0x78, 0xc2, 0x7a,
	0x53, 0x64, 0x48, 0x9e, 0x61, 0xb0, 0x87, 0x45, 0xe2, 0xc3, 0xd9, 0x9f, 0x3d, 0xa2, 0xeb, 0x7f,
	0x12, 0xbe, 0x13, 0xed, 0x90, 0x25, 0xc0, 0x37, 0x26, 0xb9, 0x3a, 0x02, 0x3a, 0x2e, 0x10, 0xfd,
	0x46, 0x4c, 0x3b, 0x0f, 0x37, 0x2f, 0x93, 0xbc, 0x30, 0x6f, 0x4d, 0xca, 0x32, 0x59, 0xf1, 0x36,
	0xe2, 0x0f, 0xc6, 0x72, 0xc9, 0xdb, 0x1b, 0xcf, 0x95, 0x7d, 0xa4, 0xa7, 0x4e, 0xbf, 0xfb, 0x0a,
	0x00, 0x00, 0xff, 0xff, 0xe7, 0xf3, 0x1f, 0xe8, 0xfb, 0x01, 0x00, 0x00,
}
