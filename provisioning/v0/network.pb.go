// Code generated by protoc-gen-go. DO NOT EDIT.
// source: provisioning/v0/network.proto

package pprovisioning // import "github.com/n0stack/proto.go/provisioning/v0"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import v0 "github.com/n0stack/proto.go/v0"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NetworkStatus_NetworkState int32

const (
	// not scheduled
	NetworkStatus_PENDING   NetworkStatus_NetworkState = 0
	NetworkStatus_AVAILABLE NetworkStatus_NetworkState = 1
	// unknown state because failed to connect for scheduled node after RUNNING.
	NetworkStatus_FAILED NetworkStatus_NetworkState = 2
	// unknown state because failed to connect for scheduled node after RUNNING.
	NetworkStatus_UNKNOWN NetworkStatus_NetworkState = 3
)

var NetworkStatus_NetworkState_name = map[int32]string{
	0: "PENDING",
	1: "AVAILABLE",
	2: "FAILED",
	3: "UNKNOWN",
}
var NetworkStatus_NetworkState_value = map[string]int32{
	"PENDING":   0,
	"AVAILABLE": 1,
	"FAILED":    2,
	"UNKNOWN":   3,
}

func (x NetworkStatus_NetworkState) String() string {
	return proto.EnumName(NetworkStatus_NetworkState_name, int32(x))
}
func (NetworkStatus_NetworkState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_network_64aaaa7dcb3339ad, []int{2, 0}
}

type Network struct {
	Id                   string         `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Metadata             *v0.Metadata   `protobuf:"bytes,2,opt,name=metadata" json:"metadata,omitempty"`
	Spec                 *NetworkSpec   `protobuf:"bytes,3,opt,name=spec" json:"spec,omitempty"`
	Status               *NetworkStatus `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Network) Reset()         { *m = Network{} }
func (m *Network) String() string { return proto.CompactTextString(m) }
func (*Network) ProtoMessage()    {}
func (*Network) Descriptor() ([]byte, []int) {
	return fileDescriptor_network_64aaaa7dcb3339ad, []int{0}
}
func (m *Network) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Network.Unmarshal(m, b)
}
func (m *Network) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Network.Marshal(b, m, deterministic)
}
func (dst *Network) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Network.Merge(dst, src)
}
func (m *Network) XXX_Size() int {
	return xxx_messageInfo_Network.Size(m)
}
func (m *Network) XXX_DiscardUnknown() {
	xxx_messageInfo_Network.DiscardUnknown(m)
}

var xxx_messageInfo_Network proto.InternalMessageInfo

func (m *Network) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Network) GetMetadata() *v0.Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Network) GetSpec() *NetworkSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Network) GetStatus() *NetworkStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type NetworkSpec struct {
	Ipv4Cidr             string   `protobuf:"bytes,1,opt,name=ipv4_cidr,json=ipv4Cidr" json:"ipv4_cidr,omitempty"`
	Ipv4Gateway          string   `protobuf:"bytes,2,opt,name=ipv4_gateway,json=ipv4Gateway" json:"ipv4_gateway,omitempty"`
	NameServer           string   `protobuf:"bytes,5,opt,name=name_server,json=nameServer" json:"name_server,omitempty"`
	Domain               string   `protobuf:"bytes,6,opt,name=domain" json:"domain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkSpec) Reset()         { *m = NetworkSpec{} }
func (m *NetworkSpec) String() string { return proto.CompactTextString(m) }
func (*NetworkSpec) ProtoMessage()    {}
func (*NetworkSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_network_64aaaa7dcb3339ad, []int{1}
}
func (m *NetworkSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkSpec.Unmarshal(m, b)
}
func (m *NetworkSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkSpec.Marshal(b, m, deterministic)
}
func (dst *NetworkSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkSpec.Merge(dst, src)
}
func (m *NetworkSpec) XXX_Size() int {
	return xxx_messageInfo_NetworkSpec.Size(m)
}
func (m *NetworkSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkSpec.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkSpec proto.InternalMessageInfo

func (m *NetworkSpec) GetIpv4Cidr() string {
	if m != nil {
		return m.Ipv4Cidr
	}
	return ""
}

func (m *NetworkSpec) GetIpv4Gateway() string {
	if m != nil {
		return m.Ipv4Gateway
	}
	return ""
}

func (m *NetworkSpec) GetNameServer() string {
	if m != nil {
		return m.NameServer
	}
	return ""
}

func (m *NetworkSpec) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

type NetworkStatus struct {
	State                NetworkStatus_NetworkState `protobuf:"varint,1,opt,name=state,enum=n0stack.provisioning.NetworkStatus_NetworkState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *NetworkStatus) Reset()         { *m = NetworkStatus{} }
func (m *NetworkStatus) String() string { return proto.CompactTextString(m) }
func (*NetworkStatus) ProtoMessage()    {}
func (*NetworkStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_network_64aaaa7dcb3339ad, []int{2}
}
func (m *NetworkStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkStatus.Unmarshal(m, b)
}
func (m *NetworkStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkStatus.Marshal(b, m, deterministic)
}
func (dst *NetworkStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkStatus.Merge(dst, src)
}
func (m *NetworkStatus) XXX_Size() int {
	return xxx_messageInfo_NetworkStatus.Size(m)
}
func (m *NetworkStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkStatus.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkStatus proto.InternalMessageInfo

func (m *NetworkStatus) GetState() NetworkStatus_NetworkState {
	if m != nil {
		return m.State
	}
	return NetworkStatus_PENDING
}

type ListNetworkRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNetworkRequest) Reset()         { *m = ListNetworkRequest{} }
func (m *ListNetworkRequest) String() string { return proto.CompactTextString(m) }
func (*ListNetworkRequest) ProtoMessage()    {}
func (*ListNetworkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_network_64aaaa7dcb3339ad, []int{3}
}
func (m *ListNetworkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNetworkRequest.Unmarshal(m, b)
}
func (m *ListNetworkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNetworkRequest.Marshal(b, m, deterministic)
}
func (dst *ListNetworkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNetworkRequest.Merge(dst, src)
}
func (m *ListNetworkRequest) XXX_Size() int {
	return xxx_messageInfo_ListNetworkRequest.Size(m)
}
func (m *ListNetworkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNetworkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListNetworkRequest proto.InternalMessageInfo

type ListNetworkResponse struct {
	Networks             []*Network `protobuf:"bytes,1,rep,name=networks" json:"networks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListNetworkResponse) Reset()         { *m = ListNetworkResponse{} }
func (m *ListNetworkResponse) String() string { return proto.CompactTextString(m) }
func (*ListNetworkResponse) ProtoMessage()    {}
func (*ListNetworkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_network_64aaaa7dcb3339ad, []int{4}
}
func (m *ListNetworkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNetworkResponse.Unmarshal(m, b)
}
func (m *ListNetworkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNetworkResponse.Marshal(b, m, deterministic)
}
func (dst *ListNetworkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNetworkResponse.Merge(dst, src)
}
func (m *ListNetworkResponse) XXX_Size() int {
	return xxx_messageInfo_ListNetworkResponse.Size(m)
}
func (m *ListNetworkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNetworkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNetworkResponse proto.InternalMessageInfo

func (m *ListNetworkResponse) GetNetworks() []*Network {
	if m != nil {
		return m.Networks
	}
	return nil
}

type GetNetworkRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNetworkRequest) Reset()         { *m = GetNetworkRequest{} }
func (m *GetNetworkRequest) String() string { return proto.CompactTextString(m) }
func (*GetNetworkRequest) ProtoMessage()    {}
func (*GetNetworkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_network_64aaaa7dcb3339ad, []int{5}
}
func (m *GetNetworkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNetworkRequest.Unmarshal(m, b)
}
func (m *GetNetworkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNetworkRequest.Marshal(b, m, deterministic)
}
func (dst *GetNetworkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNetworkRequest.Merge(dst, src)
}
func (m *GetNetworkRequest) XXX_Size() int {
	return xxx_messageInfo_GetNetworkRequest.Size(m)
}
func (m *GetNetworkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNetworkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNetworkRequest proto.InternalMessageInfo

func (m *GetNetworkRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ApplyNetworkRequest struct {
	Id                   string       `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Metadata             *v0.Metadata `protobuf:"bytes,2,opt,name=metadata" json:"metadata,omitempty"`
	Spec                 *NetworkSpec `protobuf:"bytes,3,opt,name=spec" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ApplyNetworkRequest) Reset()         { *m = ApplyNetworkRequest{} }
func (m *ApplyNetworkRequest) String() string { return proto.CompactTextString(m) }
func (*ApplyNetworkRequest) ProtoMessage()    {}
func (*ApplyNetworkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_network_64aaaa7dcb3339ad, []int{6}
}
func (m *ApplyNetworkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyNetworkRequest.Unmarshal(m, b)
}
func (m *ApplyNetworkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyNetworkRequest.Marshal(b, m, deterministic)
}
func (dst *ApplyNetworkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyNetworkRequest.Merge(dst, src)
}
func (m *ApplyNetworkRequest) XXX_Size() int {
	return xxx_messageInfo_ApplyNetworkRequest.Size(m)
}
func (m *ApplyNetworkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyNetworkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyNetworkRequest proto.InternalMessageInfo

func (m *ApplyNetworkRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ApplyNetworkRequest) GetMetadata() *v0.Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *ApplyNetworkRequest) GetSpec() *NetworkSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type DeleteNetworkRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNetworkRequest) Reset()         { *m = DeleteNetworkRequest{} }
func (m *DeleteNetworkRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteNetworkRequest) ProtoMessage()    {}
func (*DeleteNetworkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_network_64aaaa7dcb3339ad, []int{7}
}
func (m *DeleteNetworkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNetworkRequest.Unmarshal(m, b)
}
func (m *DeleteNetworkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNetworkRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteNetworkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNetworkRequest.Merge(dst, src)
}
func (m *DeleteNetworkRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteNetworkRequest.Size(m)
}
func (m *DeleteNetworkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNetworkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNetworkRequest proto.InternalMessageInfo

func (m *DeleteNetworkRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*Network)(nil), "n0stack.provisioning.Network")
	proto.RegisterType((*NetworkSpec)(nil), "n0stack.provisioning.NetworkSpec")
	proto.RegisterType((*NetworkStatus)(nil), "n0stack.provisioning.NetworkStatus")
	proto.RegisterType((*ListNetworkRequest)(nil), "n0stack.provisioning.ListNetworkRequest")
	proto.RegisterType((*ListNetworkResponse)(nil), "n0stack.provisioning.ListNetworkResponse")
	proto.RegisterType((*GetNetworkRequest)(nil), "n0stack.provisioning.GetNetworkRequest")
	proto.RegisterType((*ApplyNetworkRequest)(nil), "n0stack.provisioning.ApplyNetworkRequest")
	proto.RegisterType((*DeleteNetworkRequest)(nil), "n0stack.provisioning.DeleteNetworkRequest")
	proto.RegisterEnum("n0stack.provisioning.NetworkStatus_NetworkState", NetworkStatus_NetworkState_name, NetworkStatus_NetworkState_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NetworkServiceClient is the client API for NetworkService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NetworkServiceClient interface {
	ListNetworks(ctx context.Context, in *ListNetworkRequest, opts ...grpc.CallOption) (*ListNetworkResponse, error)
	GetNetwork(ctx context.Context, in *GetNetworkRequest, opts ...grpc.CallOption) (*Network, error)
	ApplyNetwork(ctx context.Context, in *ApplyNetworkRequest, opts ...grpc.CallOption) (*Network, error)
	DeleteNetwork(ctx context.Context, in *DeleteNetworkRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type networkServiceClient struct {
	cc *grpc.ClientConn
}

func NewNetworkServiceClient(cc *grpc.ClientConn) NetworkServiceClient {
	return &networkServiceClient{cc}
}

func (c *networkServiceClient) ListNetworks(ctx context.Context, in *ListNetworkRequest, opts ...grpc.CallOption) (*ListNetworkResponse, error) {
	out := new(ListNetworkResponse)
	err := c.cc.Invoke(ctx, "/n0stack.provisioning.NetworkService/ListNetworks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkServiceClient) GetNetwork(ctx context.Context, in *GetNetworkRequest, opts ...grpc.CallOption) (*Network, error) {
	out := new(Network)
	err := c.cc.Invoke(ctx, "/n0stack.provisioning.NetworkService/GetNetwork", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkServiceClient) ApplyNetwork(ctx context.Context, in *ApplyNetworkRequest, opts ...grpc.CallOption) (*Network, error) {
	out := new(Network)
	err := c.cc.Invoke(ctx, "/n0stack.provisioning.NetworkService/ApplyNetwork", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkServiceClient) DeleteNetwork(ctx context.Context, in *DeleteNetworkRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/n0stack.provisioning.NetworkService/DeleteNetwork", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NetworkServiceServer is the server API for NetworkService service.
type NetworkServiceServer interface {
	ListNetworks(context.Context, *ListNetworkRequest) (*ListNetworkResponse, error)
	GetNetwork(context.Context, *GetNetworkRequest) (*Network, error)
	ApplyNetwork(context.Context, *ApplyNetworkRequest) (*Network, error)
	DeleteNetwork(context.Context, *DeleteNetworkRequest) (*empty.Empty, error)
}

func RegisterNetworkServiceServer(s *grpc.Server, srv NetworkServiceServer) {
	s.RegisterService(&_NetworkService_serviceDesc, srv)
}

func _NetworkService_ListNetworks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNetworkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServiceServer).ListNetworks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.NetworkService/ListNetworks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServiceServer).ListNetworks(ctx, req.(*ListNetworkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkService_GetNetwork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNetworkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServiceServer).GetNetwork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.NetworkService/GetNetwork",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServiceServer).GetNetwork(ctx, req.(*GetNetworkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkService_ApplyNetwork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyNetworkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServiceServer).ApplyNetwork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.NetworkService/ApplyNetwork",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServiceServer).ApplyNetwork(ctx, req.(*ApplyNetworkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkService_DeleteNetwork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNetworkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServiceServer).DeleteNetwork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.NetworkService/DeleteNetwork",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServiceServer).DeleteNetwork(ctx, req.(*DeleteNetworkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NetworkService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "n0stack.provisioning.NetworkService",
	HandlerType: (*NetworkServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListNetworks",
			Handler:    _NetworkService_ListNetworks_Handler,
		},
		{
			MethodName: "GetNetwork",
			Handler:    _NetworkService_GetNetwork_Handler,
		},
		{
			MethodName: "ApplyNetwork",
			Handler:    _NetworkService_ApplyNetwork_Handler,
		},
		{
			MethodName: "DeleteNetwork",
			Handler:    _NetworkService_DeleteNetwork_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "provisioning/v0/network.proto",
}

func init() {
	proto.RegisterFile("provisioning/v0/network.proto", fileDescriptor_network_64aaaa7dcb3339ad)
}

var fileDescriptor_network_64aaaa7dcb3339ad = []byte{
	// 567 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x94, 0xc1, 0x6e, 0xda, 0x4c,
	0x10, 0xc7, 0x31, 0x24, 0x24, 0x8c, 0x49, 0x04, 0x1b, 0x14, 0x59, 0x44, 0xd1, 0x47, 0x36, 0xd2,
	0x57, 0x5a, 0xa9, 0x36, 0xa2, 0xed, 0x21, 0xe2, 0x44, 0x02, 0x41, 0xa8, 0xd4, 0x8d, 0x1c, 0x25,
	0x95, 0x72, 0x89, 0x8c, 0xbd, 0x75, 0x57, 0x05, 0xdb, 0xf5, 0x2e, 0x8e, 0xb8, 0xf6, 0xd0, 0x4b,
	0x5f, 0xa1, 0x8f, 0xd2, 0x87, 0xab, 0xbc, 0x36, 0xd4, 0x10, 0x97, 0xe6, 0xd4, 0xe3, 0xfe, 0xf7,
	0xf7, 0x9f, 0x99, 0x9d, 0x59, 0x0d, 0x1c, 0xfb, 0x81, 0x17, 0x52, 0x46, 0x3d, 0x97, 0xba, 0x8e,
	0x16, 0xb6, 0x34, 0x97, 0xf0, 0x07, 0x2f, 0xf8, 0xac, 0xfa, 0x81, 0xc7, 0x3d, 0x54, 0x73, 0x5b,
	0x8c, 0x9b, 0x96, 0x38, 0x2e, 0xb1, 0xfa, 0x91, 0xe3, 0x79, 0xce, 0x84, 0x68, 0x82, 0x19, 0xcf,
	0x3e, 0x6a, 0x64, 0xea, 0xf3, 0x79, 0x6c, 0xa9, 0x57, 0xc3, 0x96, 0x36, 0x25, 0xdc, 0xb4, 0x4d,
	0x6e, 0xc6, 0x12, 0xfe, 0x29, 0xc1, 0x8e, 0x1e, 0xc7, 0x45, 0xfb, 0x90, 0xa7, 0xb6, 0x22, 0x35,
	0xa4, 0x66, 0xc9, 0xc8, 0x53, 0x1b, 0xbd, 0x84, 0xdd, 0x05, 0xad, 0xe4, 0x1b, 0x52, 0x53, 0x6e,
	0x57, 0xd5, 0x45, 0xd2, 0x77, 0xc9, 0x85, 0xb1, 0x44, 0xd0, 0x1b, 0xd8, 0x62, 0x3e, 0xb1, 0x94,
	0x82, 0x40, 0x4f, 0xd4, 0xac, 0xfa, 0xd4, 0x24, 0xd7, 0xb5, 0x4f, 0x2c, 0x43, 0xe0, 0xa8, 0x03,
	0x45, 0xc6, 0x4d, 0x3e, 0x63, 0xca, 0x96, 0x30, 0x9e, 0x6e, 0x36, 0x0a, 0xd4, 0x48, 0x2c, 0xf8,
	0x9b, 0x04, 0x72, 0x2a, 0x24, 0x3a, 0x82, 0x12, 0xf5, 0xc3, 0xd7, 0xf7, 0x16, 0xb5, 0x83, 0xe4,
	0x25, 0xbb, 0x91, 0x70, 0x41, 0xed, 0x00, 0x9d, 0x40, 0x59, 0x5c, 0x3a, 0x26, 0x27, 0x0f, 0xe6,
	0x5c, 0xbc, 0xa9, 0x64, 0xc8, 0x91, 0x36, 0x88, 0x25, 0xf4, 0x1f, 0xc8, 0xae, 0x39, 0x25, 0xf7,
	0x8c, 0x04, 0x21, 0x09, 0x94, 0x6d, 0x41, 0x40, 0x24, 0x5d, 0x0b, 0x05, 0x1d, 0x42, 0xd1, 0xf6,
	0xa6, 0x26, 0x75, 0x95, 0xa2, 0xb8, 0x4b, 0x4e, 0xf8, 0x87, 0x04, 0x7b, 0x2b, 0x25, 0xa2, 0x4b,
	0xd8, 0x8e, 0x8a, 0x24, 0xa2, 0x8c, 0xfd, 0x76, 0xeb, 0x09, 0xcf, 0x4a, 0x9f, 0x88, 0x11, 0xdb,
	0xf1, 0x05, 0x94, 0xd3, 0x32, 0x92, 0x61, 0xe7, 0xaa, 0xaf, 0xf7, 0x86, 0xfa, 0xa0, 0x92, 0x43,
	0x7b, 0x50, 0xea, 0xde, 0x76, 0x87, 0xa3, 0xee, 0xf9, 0xa8, 0x5f, 0x91, 0x10, 0x40, 0xf1, 0xb2,
	0x3b, 0x1c, 0xf5, 0x7b, 0x95, 0x7c, 0xc4, 0xdd, 0xe8, 0x6f, 0xf5, 0xf7, 0x1f, 0xf4, 0x4a, 0x01,
	0xd7, 0x00, 0x8d, 0x28, 0xe3, 0x49, 0x20, 0x83, 0x7c, 0x99, 0x11, 0xc6, 0xf1, 0x15, 0x1c, 0xac,
	0xa8, 0xcc, 0xf7, 0x5c, 0x46, 0xd0, 0x19, 0xec, 0x26, 0x5f, 0x8d, 0x29, 0x52, 0xa3, 0xd0, 0x94,
	0xdb, 0xc7, 0x1b, 0x8b, 0x37, 0x96, 0x38, 0x3e, 0x85, 0xea, 0x80, 0xac, 0xa5, 0x59, 0xff, 0x57,
	0xf8, 0xbb, 0x04, 0x07, 0x5d, 0xdf, 0x9f, 0xcc, 0x37, 0x73, 0xff, 0xe6, 0xff, 0xe1, 0xff, 0xa1,
	0xd6, 0x23, 0x13, 0xc2, 0xc9, 0xe6, 0x6a, 0xda, 0x5f, 0x0b, 0xb0, 0xbf, 0x70, 0x93, 0x20, 0xa4,
	0x16, 0x41, 0x04, 0xca, 0xa9, 0xfe, 0x31, 0xd4, 0xcc, 0xce, 0xf9, 0xb8, 0xf3, 0xf5, 0xe7, 0x4f,
	0x20, 0xe3, 0x69, 0xe0, 0x1c, 0xba, 0x05, 0xf8, 0xdd, 0x54, 0xf4, 0x2c, 0xdb, 0xfa, 0xa8, 0xed,
	0xf5, 0xcd, 0x43, 0xc3, 0x39, 0x74, 0x07, 0xe5, 0xf4, 0x18, 0xd0, 0x1f, 0x8a, 0xca, 0x18, 0xd5,
	0xdf, 0x63, 0xdf, 0xc0, 0xde, 0x4a, 0x57, 0xd1, 0x8b, 0x6c, 0x47, 0x56, 0xeb, 0xeb, 0x87, 0x6a,
	0xbc, 0xc5, 0xd4, 0xc5, 0x16, 0x53, 0xfb, 0xd1, 0x16, 0xc3, 0xb9, 0xf3, 0xce, 0xdd, 0x99, 0x43,
	0xf9, 0xa7, 0xd9, 0x58, 0xb5, 0xbc, 0xa9, 0x96, 0x44, 0x8c, 0x97, 0x9d, 0xea, 0x78, 0xda, 0xda,
	0xc6, 0xec, 0xf8, 0x69, 0x61, 0x5c, 0x14, 0xdc, 0xab, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xb5,
	0x0a, 0x7f, 0x35, 0x59, 0x05, 0x00, 0x00,
}
