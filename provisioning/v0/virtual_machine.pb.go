// Code generated by protoc-gen-go. DO NOT EDIT.
// source: provisioning/v0/virtual_machine.proto

package pprovisioning // import "github.com/n0stack/proto.go/provisioning/v0"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import v0 "github.com/n0stack/proto.go/v0"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type VirtualMachineStatus_VirtualMachineState int32

const (
	// falied state because failed some process on API.
	VirtualMachineStatus_FAILED VirtualMachineStatus_VirtualMachineState = 0
	// unknown state because failed to connect for scheduled node after RUNNING.
	VirtualMachineStatus_UNKNOWN VirtualMachineStatus_VirtualMachineState = 1
	// running vm
	VirtualMachineStatus_RUNNING  VirtualMachineStatus_VirtualMachineState = 2
	VirtualMachineStatus_SHUTDOWN VirtualMachineStatus_VirtualMachineState = 3
	VirtualMachineStatus_PAUSED   VirtualMachineStatus_VirtualMachineState = 4
)

var VirtualMachineStatus_VirtualMachineState_name = map[int32]string{
	0: "FAILED",
	1: "UNKNOWN",
	2: "RUNNING",
	3: "SHUTDOWN",
	4: "PAUSED",
}
var VirtualMachineStatus_VirtualMachineState_value = map[string]int32{
	"FAILED":   0,
	"UNKNOWN":  1,
	"RUNNING":  2,
	"SHUTDOWN": 3,
	"PAUSED":   4,
}

func (x VirtualMachineStatus_VirtualMachineState) String() string {
	return proto.EnumName(VirtualMachineStatus_VirtualMachineState_name, int32(x))
}
func (VirtualMachineStatus_VirtualMachineState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_virtual_machine_1a3b8430f1d5d974, []int{2, 0}
}

type VirtualMachine struct {
	Metadata             *v0.Metadata          `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	Spec                 *VirtualMachineSpec   `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	Status               *VirtualMachineStatus `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *VirtualMachine) Reset()         { *m = VirtualMachine{} }
func (m *VirtualMachine) String() string { return proto.CompactTextString(m) }
func (*VirtualMachine) ProtoMessage()    {}
func (*VirtualMachine) Descriptor() ([]byte, []int) {
	return fileDescriptor_virtual_machine_1a3b8430f1d5d974, []int{0}
}
func (m *VirtualMachine) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualMachine.Unmarshal(m, b)
}
func (m *VirtualMachine) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualMachine.Marshal(b, m, deterministic)
}
func (dst *VirtualMachine) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualMachine.Merge(dst, src)
}
func (m *VirtualMachine) XXX_Size() int {
	return xxx_messageInfo_VirtualMachine.Size(m)
}
func (m *VirtualMachine) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualMachine.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualMachine proto.InternalMessageInfo

func (m *VirtualMachine) GetMetadata() *v0.Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *VirtualMachine) GetSpec() *VirtualMachineSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *VirtualMachine) GetStatus() *VirtualMachineStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type VirtualMachineSpec struct {
	RequestCpuMilliCore  uint32                    `protobuf:"varint,1,opt,name=request_cpu_milli_core,json=requestCpuMilliCore" json:"request_cpu_milli_core,omitempty"`
	LimitCpuMilliCore    uint32                    `protobuf:"varint,2,opt,name=limit_cpu_milli_core,json=limitCpuMilliCore" json:"limit_cpu_milli_core,omitempty"`
	RequestMemoryBytes   uint64                    `protobuf:"varint,3,opt,name=request_memory_bytes,json=requestMemoryBytes" json:"request_memory_bytes,omitempty"`
	LimitMemoryBytes     uint64                    `protobuf:"varint,4,opt,name=limit_memory_bytes,json=limitMemoryBytes" json:"limit_memory_bytes,omitempty"`
	VolumeName           []string                  `protobuf:"bytes,5,rep,name=volume_name,json=volumeName" json:"volume_name,omitempty"`
	Nics                 []*VirtualMachineSpec_NIC `protobuf:"bytes,6,rep,name=nics" json:"nics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *VirtualMachineSpec) Reset()         { *m = VirtualMachineSpec{} }
func (m *VirtualMachineSpec) String() string { return proto.CompactTextString(m) }
func (*VirtualMachineSpec) ProtoMessage()    {}
func (*VirtualMachineSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_virtual_machine_1a3b8430f1d5d974, []int{1}
}
func (m *VirtualMachineSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualMachineSpec.Unmarshal(m, b)
}
func (m *VirtualMachineSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualMachineSpec.Marshal(b, m, deterministic)
}
func (dst *VirtualMachineSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualMachineSpec.Merge(dst, src)
}
func (m *VirtualMachineSpec) XXX_Size() int {
	return xxx_messageInfo_VirtualMachineSpec.Size(m)
}
func (m *VirtualMachineSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualMachineSpec.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualMachineSpec proto.InternalMessageInfo

func (m *VirtualMachineSpec) GetRequestCpuMilliCore() uint32 {
	if m != nil {
		return m.RequestCpuMilliCore
	}
	return 0
}

func (m *VirtualMachineSpec) GetLimitCpuMilliCore() uint32 {
	if m != nil {
		return m.LimitCpuMilliCore
	}
	return 0
}

func (m *VirtualMachineSpec) GetRequestMemoryBytes() uint64 {
	if m != nil {
		return m.RequestMemoryBytes
	}
	return 0
}

func (m *VirtualMachineSpec) GetLimitMemoryBytes() uint64 {
	if m != nil {
		return m.LimitMemoryBytes
	}
	return 0
}

func (m *VirtualMachineSpec) GetVolumeName() []string {
	if m != nil {
		return m.VolumeName
	}
	return nil
}

func (m *VirtualMachineSpec) GetNics() []*VirtualMachineSpec_NIC {
	if m != nil {
		return m.Nics
	}
	return nil
}

type VirtualMachineSpec_NIC struct {
	NetworkName          string   `protobuf:"bytes,1,opt,name=network_name,json=networkName" json:"network_name,omitempty"`
	HardwareAddress      string   `protobuf:"bytes,2,opt,name=hardware_address,json=hardwareAddress" json:"hardware_address,omitempty"`
	Ipv4Address          string   `protobuf:"bytes,3,opt,name=ipv4_address,json=ipv4Address" json:"ipv4_address,omitempty"`
	Ipv6Address          string   `protobuf:"bytes,4,opt,name=ipv6_address,json=ipv6Address" json:"ipv6_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VirtualMachineSpec_NIC) Reset()         { *m = VirtualMachineSpec_NIC{} }
func (m *VirtualMachineSpec_NIC) String() string { return proto.CompactTextString(m) }
func (*VirtualMachineSpec_NIC) ProtoMessage()    {}
func (*VirtualMachineSpec_NIC) Descriptor() ([]byte, []int) {
	return fileDescriptor_virtual_machine_1a3b8430f1d5d974, []int{1, 0}
}
func (m *VirtualMachineSpec_NIC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualMachineSpec_NIC.Unmarshal(m, b)
}
func (m *VirtualMachineSpec_NIC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualMachineSpec_NIC.Marshal(b, m, deterministic)
}
func (dst *VirtualMachineSpec_NIC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualMachineSpec_NIC.Merge(dst, src)
}
func (m *VirtualMachineSpec_NIC) XXX_Size() int {
	return xxx_messageInfo_VirtualMachineSpec_NIC.Size(m)
}
func (m *VirtualMachineSpec_NIC) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualMachineSpec_NIC.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualMachineSpec_NIC proto.InternalMessageInfo

func (m *VirtualMachineSpec_NIC) GetNetworkName() string {
	if m != nil {
		return m.NetworkName
	}
	return ""
}

func (m *VirtualMachineSpec_NIC) GetHardwareAddress() string {
	if m != nil {
		return m.HardwareAddress
	}
	return ""
}

func (m *VirtualMachineSpec_NIC) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *VirtualMachineSpec_NIC) GetIpv6Address() string {
	if m != nil {
		return m.Ipv6Address
	}
	return ""
}

type VirtualMachineStatus struct {
	State                 VirtualMachineStatus_VirtualMachineState `protobuf:"varint,1,opt,name=state,enum=n0stack.provisioning.VirtualMachineStatus_VirtualMachineState" json:"state,omitempty"`
	Uuid                  string                                   `protobuf:"bytes,2,opt,name=uuid" json:"uuid,omitempty"`
	ComputeNodeName       string                                   `protobuf:"bytes,3,opt,name=compute_node_name,json=computeNodeName" json:"compute_node_name,omitempty"`
	ComputeName           string                                   `protobuf:"bytes,4,opt,name=compute_name,json=computeName" json:"compute_name,omitempty"`
	NetworkInterfaceNames []string                                 `protobuf:"bytes,5,rep,name=network_interface_names,json=networkInterfaceNames" json:"network_interface_names,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                                 `json:"-"`
	XXX_unrecognized      []byte                                   `json:"-"`
	XXX_sizecache         int32                                    `json:"-"`
}

func (m *VirtualMachineStatus) Reset()         { *m = VirtualMachineStatus{} }
func (m *VirtualMachineStatus) String() string { return proto.CompactTextString(m) }
func (*VirtualMachineStatus) ProtoMessage()    {}
func (*VirtualMachineStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_virtual_machine_1a3b8430f1d5d974, []int{2}
}
func (m *VirtualMachineStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualMachineStatus.Unmarshal(m, b)
}
func (m *VirtualMachineStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualMachineStatus.Marshal(b, m, deterministic)
}
func (dst *VirtualMachineStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualMachineStatus.Merge(dst, src)
}
func (m *VirtualMachineStatus) XXX_Size() int {
	return xxx_messageInfo_VirtualMachineStatus.Size(m)
}
func (m *VirtualMachineStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualMachineStatus.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualMachineStatus proto.InternalMessageInfo

func (m *VirtualMachineStatus) GetState() VirtualMachineStatus_VirtualMachineState {
	if m != nil {
		return m.State
	}
	return VirtualMachineStatus_FAILED
}

func (m *VirtualMachineStatus) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *VirtualMachineStatus) GetComputeNodeName() string {
	if m != nil {
		return m.ComputeNodeName
	}
	return ""
}

func (m *VirtualMachineStatus) GetComputeName() string {
	if m != nil {
		return m.ComputeName
	}
	return ""
}

func (m *VirtualMachineStatus) GetNetworkInterfaceNames() []string {
	if m != nil {
		return m.NetworkInterfaceNames
	}
	return nil
}

type ApplyVirtualMachineRequest struct {
	Metadata             *v0.Metadata        `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	Spec                 *VirtualMachineSpec `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ApplyVirtualMachineRequest) Reset()         { *m = ApplyVirtualMachineRequest{} }
func (m *ApplyVirtualMachineRequest) String() string { return proto.CompactTextString(m) }
func (*ApplyVirtualMachineRequest) ProtoMessage()    {}
func (*ApplyVirtualMachineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_virtual_machine_1a3b8430f1d5d974, []int{3}
}
func (m *ApplyVirtualMachineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyVirtualMachineRequest.Unmarshal(m, b)
}
func (m *ApplyVirtualMachineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyVirtualMachineRequest.Marshal(b, m, deterministic)
}
func (dst *ApplyVirtualMachineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyVirtualMachineRequest.Merge(dst, src)
}
func (m *ApplyVirtualMachineRequest) XXX_Size() int {
	return xxx_messageInfo_ApplyVirtualMachineRequest.Size(m)
}
func (m *ApplyVirtualMachineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyVirtualMachineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyVirtualMachineRequest proto.InternalMessageInfo

func (m *ApplyVirtualMachineRequest) GetMetadata() *v0.Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *ApplyVirtualMachineRequest) GetSpec() *VirtualMachineSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type ListVirtualMachinesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListVirtualMachinesRequest) Reset()         { *m = ListVirtualMachinesRequest{} }
func (m *ListVirtualMachinesRequest) String() string { return proto.CompactTextString(m) }
func (*ListVirtualMachinesRequest) ProtoMessage()    {}
func (*ListVirtualMachinesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_virtual_machine_1a3b8430f1d5d974, []int{4}
}
func (m *ListVirtualMachinesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListVirtualMachinesRequest.Unmarshal(m, b)
}
func (m *ListVirtualMachinesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListVirtualMachinesRequest.Marshal(b, m, deterministic)
}
func (dst *ListVirtualMachinesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVirtualMachinesRequest.Merge(dst, src)
}
func (m *ListVirtualMachinesRequest) XXX_Size() int {
	return xxx_messageInfo_ListVirtualMachinesRequest.Size(m)
}
func (m *ListVirtualMachinesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVirtualMachinesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListVirtualMachinesRequest proto.InternalMessageInfo

type ListVirtualMachinesResponse struct {
	VirtualMachines      []*VirtualMachine `protobuf:"bytes,1,rep,name=VirtualMachines" json:"VirtualMachines,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListVirtualMachinesResponse) Reset()         { *m = ListVirtualMachinesResponse{} }
func (m *ListVirtualMachinesResponse) String() string { return proto.CompactTextString(m) }
func (*ListVirtualMachinesResponse) ProtoMessage()    {}
func (*ListVirtualMachinesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_virtual_machine_1a3b8430f1d5d974, []int{5}
}
func (m *ListVirtualMachinesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListVirtualMachinesResponse.Unmarshal(m, b)
}
func (m *ListVirtualMachinesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListVirtualMachinesResponse.Marshal(b, m, deterministic)
}
func (dst *ListVirtualMachinesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVirtualMachinesResponse.Merge(dst, src)
}
func (m *ListVirtualMachinesResponse) XXX_Size() int {
	return xxx_messageInfo_ListVirtualMachinesResponse.Size(m)
}
func (m *ListVirtualMachinesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVirtualMachinesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListVirtualMachinesResponse proto.InternalMessageInfo

func (m *ListVirtualMachinesResponse) GetVirtualMachines() []*VirtualMachine {
	if m != nil {
		return m.VirtualMachines
	}
	return nil
}

type GetVirtualMachineRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVirtualMachineRequest) Reset()         { *m = GetVirtualMachineRequest{} }
func (m *GetVirtualMachineRequest) String() string { return proto.CompactTextString(m) }
func (*GetVirtualMachineRequest) ProtoMessage()    {}
func (*GetVirtualMachineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_virtual_machine_1a3b8430f1d5d974, []int{6}
}
func (m *GetVirtualMachineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVirtualMachineRequest.Unmarshal(m, b)
}
func (m *GetVirtualMachineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVirtualMachineRequest.Marshal(b, m, deterministic)
}
func (dst *GetVirtualMachineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVirtualMachineRequest.Merge(dst, src)
}
func (m *GetVirtualMachineRequest) XXX_Size() int {
	return xxx_messageInfo_GetVirtualMachineRequest.Size(m)
}
func (m *GetVirtualMachineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVirtualMachineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVirtualMachineRequest proto.InternalMessageInfo

func (m *GetVirtualMachineRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UpdateVirtualMachineRequest struct {
	Metadata             *v0.Metadata        `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	Spec                 *VirtualMachineSpec `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *UpdateVirtualMachineRequest) Reset()         { *m = UpdateVirtualMachineRequest{} }
func (m *UpdateVirtualMachineRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateVirtualMachineRequest) ProtoMessage()    {}
func (*UpdateVirtualMachineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_virtual_machine_1a3b8430f1d5d974, []int{7}
}
func (m *UpdateVirtualMachineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateVirtualMachineRequest.Unmarshal(m, b)
}
func (m *UpdateVirtualMachineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateVirtualMachineRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateVirtualMachineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateVirtualMachineRequest.Merge(dst, src)
}
func (m *UpdateVirtualMachineRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateVirtualMachineRequest.Size(m)
}
func (m *UpdateVirtualMachineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateVirtualMachineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateVirtualMachineRequest proto.InternalMessageInfo

func (m *UpdateVirtualMachineRequest) GetMetadata() *v0.Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *UpdateVirtualMachineRequest) GetSpec() *VirtualMachineSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type DeleteVirtualMachineRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteVirtualMachineRequest) Reset()         { *m = DeleteVirtualMachineRequest{} }
func (m *DeleteVirtualMachineRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteVirtualMachineRequest) ProtoMessage()    {}
func (*DeleteVirtualMachineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_virtual_machine_1a3b8430f1d5d974, []int{8}
}
func (m *DeleteVirtualMachineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVirtualMachineRequest.Unmarshal(m, b)
}
func (m *DeleteVirtualMachineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVirtualMachineRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteVirtualMachineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVirtualMachineRequest.Merge(dst, src)
}
func (m *DeleteVirtualMachineRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteVirtualMachineRequest.Size(m)
}
func (m *DeleteVirtualMachineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVirtualMachineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVirtualMachineRequest proto.InternalMessageInfo

func (m *DeleteVirtualMachineRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type BootVirtualMachineRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BootVirtualMachineRequest) Reset()         { *m = BootVirtualMachineRequest{} }
func (m *BootVirtualMachineRequest) String() string { return proto.CompactTextString(m) }
func (*BootVirtualMachineRequest) ProtoMessage()    {}
func (*BootVirtualMachineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_virtual_machine_1a3b8430f1d5d974, []int{9}
}
func (m *BootVirtualMachineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BootVirtualMachineRequest.Unmarshal(m, b)
}
func (m *BootVirtualMachineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BootVirtualMachineRequest.Marshal(b, m, deterministic)
}
func (dst *BootVirtualMachineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BootVirtualMachineRequest.Merge(dst, src)
}
func (m *BootVirtualMachineRequest) XXX_Size() int {
	return xxx_messageInfo_BootVirtualMachineRequest.Size(m)
}
func (m *BootVirtualMachineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BootVirtualMachineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BootVirtualMachineRequest proto.InternalMessageInfo

func (m *BootVirtualMachineRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type RebootVirtualMachineRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Hard                 bool     `protobuf:"varint,2,opt,name=hard" json:"hard,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RebootVirtualMachineRequest) Reset()         { *m = RebootVirtualMachineRequest{} }
func (m *RebootVirtualMachineRequest) String() string { return proto.CompactTextString(m) }
func (*RebootVirtualMachineRequest) ProtoMessage()    {}
func (*RebootVirtualMachineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_virtual_machine_1a3b8430f1d5d974, []int{10}
}
func (m *RebootVirtualMachineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RebootVirtualMachineRequest.Unmarshal(m, b)
}
func (m *RebootVirtualMachineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RebootVirtualMachineRequest.Marshal(b, m, deterministic)
}
func (dst *RebootVirtualMachineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RebootVirtualMachineRequest.Merge(dst, src)
}
func (m *RebootVirtualMachineRequest) XXX_Size() int {
	return xxx_messageInfo_RebootVirtualMachineRequest.Size(m)
}
func (m *RebootVirtualMachineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RebootVirtualMachineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RebootVirtualMachineRequest proto.InternalMessageInfo

func (m *RebootVirtualMachineRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RebootVirtualMachineRequest) GetHard() bool {
	if m != nil {
		return m.Hard
	}
	return false
}

type ShutdownVirtualMachineRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Hard                 bool     `protobuf:"varint,2,opt,name=hard" json:"hard,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShutdownVirtualMachineRequest) Reset()         { *m = ShutdownVirtualMachineRequest{} }
func (m *ShutdownVirtualMachineRequest) String() string { return proto.CompactTextString(m) }
func (*ShutdownVirtualMachineRequest) ProtoMessage()    {}
func (*ShutdownVirtualMachineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_virtual_machine_1a3b8430f1d5d974, []int{11}
}
func (m *ShutdownVirtualMachineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShutdownVirtualMachineRequest.Unmarshal(m, b)
}
func (m *ShutdownVirtualMachineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShutdownVirtualMachineRequest.Marshal(b, m, deterministic)
}
func (dst *ShutdownVirtualMachineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShutdownVirtualMachineRequest.Merge(dst, src)
}
func (m *ShutdownVirtualMachineRequest) XXX_Size() int {
	return xxx_messageInfo_ShutdownVirtualMachineRequest.Size(m)
}
func (m *ShutdownVirtualMachineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShutdownVirtualMachineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShutdownVirtualMachineRequest proto.InternalMessageInfo

func (m *ShutdownVirtualMachineRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ShutdownVirtualMachineRequest) GetHard() bool {
	if m != nil {
		return m.Hard
	}
	return false
}

type SaveVirtualMachineRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaveVirtualMachineRequest) Reset()         { *m = SaveVirtualMachineRequest{} }
func (m *SaveVirtualMachineRequest) String() string { return proto.CompactTextString(m) }
func (*SaveVirtualMachineRequest) ProtoMessage()    {}
func (*SaveVirtualMachineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_virtual_machine_1a3b8430f1d5d974, []int{12}
}
func (m *SaveVirtualMachineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveVirtualMachineRequest.Unmarshal(m, b)
}
func (m *SaveVirtualMachineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveVirtualMachineRequest.Marshal(b, m, deterministic)
}
func (dst *SaveVirtualMachineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveVirtualMachineRequest.Merge(dst, src)
}
func (m *SaveVirtualMachineRequest) XXX_Size() int {
	return xxx_messageInfo_SaveVirtualMachineRequest.Size(m)
}
func (m *SaveVirtualMachineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveVirtualMachineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SaveVirtualMachineRequest proto.InternalMessageInfo

func (m *SaveVirtualMachineRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*VirtualMachine)(nil), "n0stack.provisioning.VirtualMachine")
	proto.RegisterType((*VirtualMachineSpec)(nil), "n0stack.provisioning.VirtualMachineSpec")
	proto.RegisterType((*VirtualMachineSpec_NIC)(nil), "n0stack.provisioning.VirtualMachineSpec.NIC")
	proto.RegisterType((*VirtualMachineStatus)(nil), "n0stack.provisioning.VirtualMachineStatus")
	proto.RegisterType((*ApplyVirtualMachineRequest)(nil), "n0stack.provisioning.ApplyVirtualMachineRequest")
	proto.RegisterType((*ListVirtualMachinesRequest)(nil), "n0stack.provisioning.ListVirtualMachinesRequest")
	proto.RegisterType((*ListVirtualMachinesResponse)(nil), "n0stack.provisioning.ListVirtualMachinesResponse")
	proto.RegisterType((*GetVirtualMachineRequest)(nil), "n0stack.provisioning.GetVirtualMachineRequest")
	proto.RegisterType((*UpdateVirtualMachineRequest)(nil), "n0stack.provisioning.UpdateVirtualMachineRequest")
	proto.RegisterType((*DeleteVirtualMachineRequest)(nil), "n0stack.provisioning.DeleteVirtualMachineRequest")
	proto.RegisterType((*BootVirtualMachineRequest)(nil), "n0stack.provisioning.BootVirtualMachineRequest")
	proto.RegisterType((*RebootVirtualMachineRequest)(nil), "n0stack.provisioning.RebootVirtualMachineRequest")
	proto.RegisterType((*ShutdownVirtualMachineRequest)(nil), "n0stack.provisioning.ShutdownVirtualMachineRequest")
	proto.RegisterType((*SaveVirtualMachineRequest)(nil), "n0stack.provisioning.SaveVirtualMachineRequest")
	proto.RegisterEnum("n0stack.provisioning.VirtualMachineStatus_VirtualMachineState", VirtualMachineStatus_VirtualMachineState_name, VirtualMachineStatus_VirtualMachineState_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for VirtualMachineService service

type VirtualMachineServiceClient interface {
	CreateVirtualMachine(ctx context.Context, in *ApplyVirtualMachineRequest, opts ...grpc.CallOption) (*VirtualMachine, error)
	ListVirtualMachines(ctx context.Context, in *ListVirtualMachinesRequest, opts ...grpc.CallOption) (*ListVirtualMachinesResponse, error)
	GetVirtualMachine(ctx context.Context, in *GetVirtualMachineRequest, opts ...grpc.CallOption) (*VirtualMachine, error)
	UpdateVirtualMachine(ctx context.Context, in *UpdateVirtualMachineRequest, opts ...grpc.CallOption) (*VirtualMachine, error)
	DeleteVirtualMachine(ctx context.Context, in *DeleteVirtualMachineRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// VM actions
	// -> RUNNING
	BootVirtualMachine(ctx context.Context, in *BootVirtualMachineRequest, opts ...grpc.CallOption) (*VirtualMachine, error)
	// RUNNING -> RUNNING
	RebootVirtualMachine(ctx context.Context, in *RebootVirtualMachineRequest, opts ...grpc.CallOption) (*VirtualMachine, error)
	// RUNNING -> SHUTDOWN
	ShutdownVirtualMachine(ctx context.Context, in *ShutdownVirtualMachineRequest, opts ...grpc.CallOption) (*VirtualMachine, error)
	// RUNNING -> PAUSED
	SaveVirtualMachine(ctx context.Context, in *SaveVirtualMachineRequest, opts ...grpc.CallOption) (*VirtualMachine, error)
}

type virtualMachineServiceClient struct {
	cc *grpc.ClientConn
}

func NewVirtualMachineServiceClient(cc *grpc.ClientConn) VirtualMachineServiceClient {
	return &virtualMachineServiceClient{cc}
}

func (c *virtualMachineServiceClient) CreateVirtualMachine(ctx context.Context, in *ApplyVirtualMachineRequest, opts ...grpc.CallOption) (*VirtualMachine, error) {
	out := new(VirtualMachine)
	err := grpc.Invoke(ctx, "/n0stack.provisioning.VirtualMachineService/CreateVirtualMachine", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualMachineServiceClient) ListVirtualMachines(ctx context.Context, in *ListVirtualMachinesRequest, opts ...grpc.CallOption) (*ListVirtualMachinesResponse, error) {
	out := new(ListVirtualMachinesResponse)
	err := grpc.Invoke(ctx, "/n0stack.provisioning.VirtualMachineService/ListVirtualMachines", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualMachineServiceClient) GetVirtualMachine(ctx context.Context, in *GetVirtualMachineRequest, opts ...grpc.CallOption) (*VirtualMachine, error) {
	out := new(VirtualMachine)
	err := grpc.Invoke(ctx, "/n0stack.provisioning.VirtualMachineService/GetVirtualMachine", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualMachineServiceClient) UpdateVirtualMachine(ctx context.Context, in *UpdateVirtualMachineRequest, opts ...grpc.CallOption) (*VirtualMachine, error) {
	out := new(VirtualMachine)
	err := grpc.Invoke(ctx, "/n0stack.provisioning.VirtualMachineService/UpdateVirtualMachine", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualMachineServiceClient) DeleteVirtualMachine(ctx context.Context, in *DeleteVirtualMachineRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/n0stack.provisioning.VirtualMachineService/DeleteVirtualMachine", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualMachineServiceClient) BootVirtualMachine(ctx context.Context, in *BootVirtualMachineRequest, opts ...grpc.CallOption) (*VirtualMachine, error) {
	out := new(VirtualMachine)
	err := grpc.Invoke(ctx, "/n0stack.provisioning.VirtualMachineService/BootVirtualMachine", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualMachineServiceClient) RebootVirtualMachine(ctx context.Context, in *RebootVirtualMachineRequest, opts ...grpc.CallOption) (*VirtualMachine, error) {
	out := new(VirtualMachine)
	err := grpc.Invoke(ctx, "/n0stack.provisioning.VirtualMachineService/RebootVirtualMachine", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualMachineServiceClient) ShutdownVirtualMachine(ctx context.Context, in *ShutdownVirtualMachineRequest, opts ...grpc.CallOption) (*VirtualMachine, error) {
	out := new(VirtualMachine)
	err := grpc.Invoke(ctx, "/n0stack.provisioning.VirtualMachineService/ShutdownVirtualMachine", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualMachineServiceClient) SaveVirtualMachine(ctx context.Context, in *SaveVirtualMachineRequest, opts ...grpc.CallOption) (*VirtualMachine, error) {
	out := new(VirtualMachine)
	err := grpc.Invoke(ctx, "/n0stack.provisioning.VirtualMachineService/SaveVirtualMachine", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for VirtualMachineService service

type VirtualMachineServiceServer interface {
	CreateVirtualMachine(context.Context, *ApplyVirtualMachineRequest) (*VirtualMachine, error)
	ListVirtualMachines(context.Context, *ListVirtualMachinesRequest) (*ListVirtualMachinesResponse, error)
	GetVirtualMachine(context.Context, *GetVirtualMachineRequest) (*VirtualMachine, error)
	UpdateVirtualMachine(context.Context, *UpdateVirtualMachineRequest) (*VirtualMachine, error)
	DeleteVirtualMachine(context.Context, *DeleteVirtualMachineRequest) (*empty.Empty, error)
	// VM actions
	// -> RUNNING
	BootVirtualMachine(context.Context, *BootVirtualMachineRequest) (*VirtualMachine, error)
	// RUNNING -> RUNNING
	RebootVirtualMachine(context.Context, *RebootVirtualMachineRequest) (*VirtualMachine, error)
	// RUNNING -> SHUTDOWN
	ShutdownVirtualMachine(context.Context, *ShutdownVirtualMachineRequest) (*VirtualMachine, error)
	// RUNNING -> PAUSED
	SaveVirtualMachine(context.Context, *SaveVirtualMachineRequest) (*VirtualMachine, error)
}

func RegisterVirtualMachineServiceServer(s *grpc.Server, srv VirtualMachineServiceServer) {
	s.RegisterService(&_VirtualMachineService_serviceDesc, srv)
}

func _VirtualMachineService_CreateVirtualMachine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyVirtualMachineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualMachineServiceServer).CreateVirtualMachine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.VirtualMachineService/CreateVirtualMachine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualMachineServiceServer).CreateVirtualMachine(ctx, req.(*ApplyVirtualMachineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualMachineService_ListVirtualMachines_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListVirtualMachinesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualMachineServiceServer).ListVirtualMachines(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.VirtualMachineService/ListVirtualMachines",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualMachineServiceServer).ListVirtualMachines(ctx, req.(*ListVirtualMachinesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualMachineService_GetVirtualMachine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVirtualMachineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualMachineServiceServer).GetVirtualMachine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.VirtualMachineService/GetVirtualMachine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualMachineServiceServer).GetVirtualMachine(ctx, req.(*GetVirtualMachineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualMachineService_UpdateVirtualMachine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateVirtualMachineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualMachineServiceServer).UpdateVirtualMachine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.VirtualMachineService/UpdateVirtualMachine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualMachineServiceServer).UpdateVirtualMachine(ctx, req.(*UpdateVirtualMachineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualMachineService_DeleteVirtualMachine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteVirtualMachineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualMachineServiceServer).DeleteVirtualMachine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.VirtualMachineService/DeleteVirtualMachine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualMachineServiceServer).DeleteVirtualMachine(ctx, req.(*DeleteVirtualMachineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualMachineService_BootVirtualMachine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BootVirtualMachineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualMachineServiceServer).BootVirtualMachine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.VirtualMachineService/BootVirtualMachine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualMachineServiceServer).BootVirtualMachine(ctx, req.(*BootVirtualMachineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualMachineService_RebootVirtualMachine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RebootVirtualMachineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualMachineServiceServer).RebootVirtualMachine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.VirtualMachineService/RebootVirtualMachine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualMachineServiceServer).RebootVirtualMachine(ctx, req.(*RebootVirtualMachineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualMachineService_ShutdownVirtualMachine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShutdownVirtualMachineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualMachineServiceServer).ShutdownVirtualMachine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.VirtualMachineService/ShutdownVirtualMachine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualMachineServiceServer).ShutdownVirtualMachine(ctx, req.(*ShutdownVirtualMachineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualMachineService_SaveVirtualMachine_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveVirtualMachineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualMachineServiceServer).SaveVirtualMachine(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.VirtualMachineService/SaveVirtualMachine",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualMachineServiceServer).SaveVirtualMachine(ctx, req.(*SaveVirtualMachineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VirtualMachineService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "n0stack.provisioning.VirtualMachineService",
	HandlerType: (*VirtualMachineServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateVirtualMachine",
			Handler:    _VirtualMachineService_CreateVirtualMachine_Handler,
		},
		{
			MethodName: "ListVirtualMachines",
			Handler:    _VirtualMachineService_ListVirtualMachines_Handler,
		},
		{
			MethodName: "GetVirtualMachine",
			Handler:    _VirtualMachineService_GetVirtualMachine_Handler,
		},
		{
			MethodName: "UpdateVirtualMachine",
			Handler:    _VirtualMachineService_UpdateVirtualMachine_Handler,
		},
		{
			MethodName: "DeleteVirtualMachine",
			Handler:    _VirtualMachineService_DeleteVirtualMachine_Handler,
		},
		{
			MethodName: "BootVirtualMachine",
			Handler:    _VirtualMachineService_BootVirtualMachine_Handler,
		},
		{
			MethodName: "RebootVirtualMachine",
			Handler:    _VirtualMachineService_RebootVirtualMachine_Handler,
		},
		{
			MethodName: "ShutdownVirtualMachine",
			Handler:    _VirtualMachineService_ShutdownVirtualMachine_Handler,
		},
		{
			MethodName: "SaveVirtualMachine",
			Handler:    _VirtualMachineService_SaveVirtualMachine_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "provisioning/v0/virtual_machine.proto",
}

func init() {
	proto.RegisterFile("provisioning/v0/virtual_machine.proto", fileDescriptor_virtual_machine_1a3b8430f1d5d974)
}

var fileDescriptor_virtual_machine_1a3b8430f1d5d974 = []byte{
	// 901 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x56, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0x6e, 0x9a, 0x6c, 0x69, 0x4f, 0xca, 0x36, 0x39, 0xcd, 0x96, 0x6c, 0x02, 0xa2, 0x6b, 0x81,
	0x54, 0x56, 0x8b, 0x9d, 0x6d, 0x51, 0x25, 0xb4, 0x08, 0xd1, 0xa6, 0xa5, 0x44, 0x6c, 0x0d, 0x72,
	0x36, 0x20, 0x71, 0x13, 0x39, 0xf6, 0x6c, 0x3a, 0x6a, 0xec, 0x71, 0xed, 0xb1, 0xab, 0x4a, 0xbc,
	0x00, 0x5c, 0x73, 0xc3, 0xe3, 0xf0, 0x18, 0xdc, 0xf0, 0x2c, 0xc8, 0x33, 0x76, 0xd4, 0x34, 0xe3,
	0xca, 0x15, 0x12, 0xda, 0xbb, 0xe4, 0x7c, 0xdf, 0x77, 0xfe, 0x66, 0x3e, 0x6b, 0xe0, 0xd3, 0x20,
	0x64, 0x09, 0x8d, 0x28, 0xf3, 0xa9, 0x3f, 0x35, 0x92, 0x9e, 0x91, 0xd0, 0x90, 0xc7, 0xf6, 0x6c,
	0xec, 0xd9, 0xce, 0x05, 0xf5, 0x89, 0x1e, 0x84, 0x8c, 0x33, 0x6c, 0xf9, 0xbd, 0x88, 0xdb, 0xce,
	0xa5, 0x7e, 0x9b, 0xde, 0xe9, 0x4e, 0x19, 0x9b, 0xce, 0x88, 0x21, 0x38, 0x93, 0xf8, 0xad, 0x41,
	0xbc, 0x80, 0xdf, 0x48, 0x49, 0xa7, 0x99, 0xf4, 0x0c, 0x8f, 0x70, 0xdb, 0xb5, 0xb9, 0x2d, 0x43,
	0xda, 0x5f, 0x15, 0x78, 0xfc, 0x93, 0xcc, 0x7f, 0x2e, 0xd3, 0xe3, 0xe7, 0xb0, 0x9e, 0x93, 0xda,
	0x95, 0xdd, 0xca, 0x5e, 0x7d, 0xbf, 0xa9, 0xe7, 0xb5, 0xce, 0x33, 0xc0, 0x9a, 0x53, 0xf0, 0x2b,
	0xa8, 0x45, 0x01, 0x71, 0xda, 0xab, 0x82, 0xba, 0xa7, 0xab, 0xda, 0xd2, 0x17, 0x4b, 0x0c, 0x03,
	0xe2, 0x58, 0x42, 0x85, 0xc7, 0xb0, 0x16, 0x71, 0x9b, 0xc7, 0x51, 0xbb, 0x2a, 0xf4, 0xcf, 0x4b,
	0xe9, 0x85, 0xc2, 0xca, 0x94, 0xda, 0xdf, 0x55, 0xc0, 0xe5, 0x02, 0x78, 0x00, 0x3b, 0x21, 0xb9,
	0x8a, 0x49, 0xc4, 0xc7, 0x4e, 0x10, 0x8f, 0x3d, 0x3a, 0x9b, 0xd1, 0xb1, 0xc3, 0x42, 0x22, 0xa6,
	0x7a, 0xdf, 0xda, 0xce, 0xd0, 0x7e, 0x10, 0x9f, 0xa7, 0x58, 0x9f, 0x85, 0x04, 0x0d, 0x68, 0xcd,
	0xa8, 0x47, 0x97, 0x24, 0xab, 0x42, 0xd2, 0x14, 0xd8, 0x82, 0xa0, 0x07, 0xad, 0xbc, 0x8a, 0x47,
	0x3c, 0x16, 0xde, 0x8c, 0x27, 0x37, 0x9c, 0xc8, 0x71, 0x6a, 0x16, 0x66, 0xd8, 0xb9, 0x80, 0x8e,
	0x53, 0x04, 0x5f, 0x00, 0xca, 0x12, 0x0b, 0xfc, 0x9a, 0xe0, 0x37, 0x04, 0x72, 0x9b, 0xfd, 0x31,
	0xd4, 0x13, 0x36, 0x8b, 0x3d, 0x32, 0xf6, 0x6d, 0x8f, 0xb4, 0x1f, 0xed, 0x56, 0xf7, 0x36, 0x2c,
	0x90, 0x21, 0xd3, 0xf6, 0x08, 0x7e, 0x03, 0x35, 0x9f, 0x3a, 0x51, 0x7b, 0x6d, 0xb7, 0xba, 0x57,
	0xdf, 0x7f, 0x51, 0x76, 0xff, 0xba, 0x39, 0xe8, 0x5b, 0x42, 0xd9, 0xf9, 0xb3, 0x02, 0x55, 0x73,
	0xd0, 0xc7, 0x67, 0xb0, 0xe9, 0x13, 0x7e, 0xcd, 0xc2, 0x4b, 0x59, 0x2b, 0x5d, 0xd3, 0x86, 0x55,
	0xcf, 0x62, 0xa2, 0xd8, 0x67, 0xd0, 0xb8, 0xb0, 0x43, 0xf7, 0xda, 0x0e, 0xc9, 0xd8, 0x76, 0xdd,
	0x90, 0x44, 0x91, 0x58, 0xcd, 0x86, 0xb5, 0x95, 0xc7, 0x8f, 0x64, 0x38, 0xcd, 0x46, 0x83, 0xe4,
	0x8b, 0x39, 0xad, 0x2a, 0xb3, 0xa5, 0xb1, 0x45, 0xca, 0xe1, 0x9c, 0x52, 0x9b, 0x53, 0x0e, 0x33,
	0x8a, 0xf6, 0xcf, 0x2a, 0xb4, 0x54, 0x87, 0x8f, 0x6f, 0xe0, 0x51, 0x7a, 0xfc, 0xb2, 0xcb, 0xc7,
	0xfb, 0x5f, 0x97, 0xbf, 0x37, 0x8a, 0x20, 0xb1, 0x64, 0x32, 0x44, 0xa8, 0xc5, 0x31, 0x75, 0xb3,
	0x99, 0xc4, 0x6f, 0x7c, 0x0e, 0x4d, 0x87, 0x79, 0x41, 0xcc, 0xc9, 0xd8, 0x67, 0x6e, 0x76, 0x0e,
	0x72, 0x9a, 0xad, 0x0c, 0x30, 0x99, 0x2b, 0x0f, 0xe3, 0x19, 0x6c, 0xce, 0xb9, 0x29, 0x2d, 0x9b,
	0x28, 0xa7, 0xa5, 0x94, 0x43, 0xf8, 0x20, 0xdf, 0x32, 0xf5, 0x39, 0x09, 0xdf, 0xda, 0x8e, 0x24,
	0x47, 0xd9, 0xe1, 0x3e, 0xc9, 0xe0, 0x41, 0x8e, 0xa6, 0xb2, 0x48, 0x1b, 0xc1, 0xb6, 0xa2, 0x71,
	0x04, 0x58, 0xfb, 0xf6, 0x68, 0xf0, 0xfa, 0xf4, 0xa4, 0xb1, 0x82, 0x75, 0x78, 0x6f, 0x64, 0x7e,
	0x6f, 0xfe, 0xf0, 0xb3, 0xd9, 0xa8, 0xa4, 0x7f, 0xac, 0x91, 0x69, 0x0e, 0xcc, 0xb3, 0xc6, 0x2a,
	0x6e, 0xc2, 0xfa, 0xf0, 0xbb, 0xd1, 0x9b, 0x93, 0x14, 0xaa, 0xa6, 0x9a, 0x1f, 0x8f, 0x46, 0xc3,
	0xd3, 0x93, 0x46, 0x4d, 0xfb, 0xad, 0x02, 0x9d, 0xa3, 0x20, 0x98, 0xdd, 0x2c, 0x26, 0xb7, 0xe4,
	0xbd, 0xfd, 0x5f, 0x3f, 0x06, 0xda, 0x87, 0xd0, 0x79, 0x4d, 0x23, 0xbe, 0x88, 0x47, 0x59, 0x2b,
	0x9a, 0x07, 0x5d, 0x25, 0x1a, 0x05, 0xcc, 0x8f, 0x08, 0x9a, 0xb0, 0x75, 0x07, 0x6a, 0x57, 0x84,
	0x25, 0x3e, 0x29, 0xd3, 0x85, 0x75, 0x57, 0xac, 0xe9, 0xd0, 0x3e, 0x23, 0x5c, 0xbd, 0x15, 0x84,
	0xda, 0x2d, 0x87, 0x88, 0xdf, 0xda, 0xef, 0x15, 0xe8, 0x8e, 0x02, 0xd7, 0xe6, 0xe4, 0x1d, 0xd8,
	0xe4, 0x4b, 0xe8, 0x9e, 0x90, 0x19, 0x29, 0xea, 0x45, 0xd5, 0xbf, 0x01, 0x4f, 0x8f, 0x19, 0x7b,
	0xc0, 0xc0, 0xa7, 0xd0, 0xb5, 0xc8, 0xe4, 0x21, 0x92, 0x34, 0x96, 0x7e, 0x26, 0xc4, 0x50, 0xeb,
	0x96, 0xf8, 0xad, 0x9d, 0xc1, 0x47, 0xc3, 0x8b, 0x98, 0xbb, 0xec, 0xda, 0xff, 0x6f, 0x89, 0x0c,
	0x78, 0x3a, 0xb4, 0x93, 0xf2, 0x13, 0xef, 0xff, 0xb1, 0x0e, 0x4f, 0xee, 0x6c, 0x90, 0x84, 0x09,
	0x75, 0x08, 0x06, 0xd0, 0xea, 0x87, 0x64, 0xe9, 0x28, 0xb1, 0xa7, 0x3e, 0x86, 0x62, 0xff, 0x74,
	0x4a, 0x5d, 0x3e, 0x6d, 0x05, 0x7f, 0x85, 0x6d, 0xc5, 0xe5, 0x2e, 0x2a, 0x58, 0xec, 0x92, 0xce,
	0xcb, 0x07, 0x28, 0xa4, 0x73, 0xb4, 0x15, 0xbc, 0x84, 0xe6, 0xd2, 0x5d, 0x47, 0x5d, 0x9d, 0xa9,
	0xc8, 0x14, 0xa5, 0x47, 0xbd, 0x82, 0x96, 0xca, 0x27, 0x58, 0xd0, 0xf9, 0x3d, 0x9e, 0x2a, 0x5d,
	0xd2, 0x81, 0x96, 0xca, 0x0e, 0x45, 0x25, 0xef, 0xb1, 0x4e, 0x67, 0x47, 0x97, 0x2f, 0x2c, 0x3d,
	0x7f, 0x61, 0xe9, 0xa7, 0xe9, 0x0b, 0x4b, 0x5b, 0x41, 0x0f, 0x70, 0xd9, 0x40, 0x68, 0xa8, 0x4b,
	0x14, 0x5a, 0xed, 0x21, 0x6b, 0x54, 0xd9, 0xaf, 0x68, 0xa6, 0x7b, 0xac, 0x5a, 0xba, 0x64, 0x0c,
	0x3b, 0x6a, 0xab, 0xe2, 0x81, 0x3a, 0xc3, 0xbd, 0xc6, 0x2e, 0x5d, 0xd6, 0x03, 0x5c, 0x36, 0x76,
	0xd1, 0x62, 0x0b, 0x3f, 0x01, 0x65, 0xcb, 0x1d, 0xbf, 0xfa, 0xe5, 0xcb, 0x29, 0xe5, 0x17, 0xf1,
	0x44, 0x77, 0x98, 0x67, 0x64, 0x1a, 0xf9, 0xa0, 0xd6, 0xa7, 0xcc, 0xb8, 0xf3, 0x3a, 0x7f, 0x15,
	0xdc, 0x0e, 0x4c, 0xd6, 0x04, 0xef, 0xe0, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x52, 0x62, 0x22,
	0xf8, 0xc5, 0x0b, 0x00, 0x00,
}
