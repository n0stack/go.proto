// Code generated by protoc-gen-go. DO NOT EDIT.
// source: provisioning/v0/volume.proto

package pprovisioning // import "github.com/n0stack/proto.go/provisioning/v0"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import v01 "github.com/n0stack/proto.go/resource/v0"
import v0 "github.com/n0stack/proto.go/v0"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type VolumeStatus_VolumeState int32

const (
	// falied state because failed some process on API.
	VolumeStatus_FAILED VolumeStatus_VolumeState = 0
	// unknown state because failed to connect for scheduled node after RUNNING.
	VolumeStatus_UNKNOWN   VolumeStatus_VolumeState = 1
	VolumeStatus_AVAILABLE VolumeStatus_VolumeState = 2
)

var VolumeStatus_VolumeState_name = map[int32]string{
	0: "FAILED",
	1: "UNKNOWN",
	2: "AVAILABLE",
}
var VolumeStatus_VolumeState_value = map[string]int32{
	"FAILED":    0,
	"UNKNOWN":   1,
	"AVAILABLE": 2,
}

func (x VolumeStatus_VolumeState) String() string {
	return proto.EnumName(VolumeStatus_VolumeState_name, int32(x))
}
func (VolumeStatus_VolumeState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_volume_e7cf64116ac5eabb, []int{2, 0}
}

type Volume struct {
	Metadata             *v0.Metadata  `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	Spec                 *VolumeSpec   `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	Status               *VolumeStatus `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Volume) Reset()         { *m = Volume{} }
func (m *Volume) String() string { return proto.CompactTextString(m) }
func (*Volume) ProtoMessage()    {}
func (*Volume) Descriptor() ([]byte, []int) {
	return fileDescriptor_volume_e7cf64116ac5eabb, []int{0}
}
func (m *Volume) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Volume.Unmarshal(m, b)
}
func (m *Volume) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Volume.Marshal(b, m, deterministic)
}
func (dst *Volume) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Volume.Merge(dst, src)
}
func (m *Volume) XXX_Size() int {
	return xxx_messageInfo_Volume.Size(m)
}
func (m *Volume) XXX_DiscardUnknown() {
	xxx_messageInfo_Volume.DiscardUnknown(m)
}

var xxx_messageInfo_Volume proto.InternalMessageInfo

func (m *Volume) GetMetadata() *v0.Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Volume) GetSpec() *VolumeSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Volume) GetStatus() *VolumeStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type VolumeSpec struct {
	Storage              *v01.Storage `protobuf:"bytes,1,opt,name=storage" json:"storage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *VolumeSpec) Reset()         { *m = VolumeSpec{} }
func (m *VolumeSpec) String() string { return proto.CompactTextString(m) }
func (*VolumeSpec) ProtoMessage()    {}
func (*VolumeSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_volume_e7cf64116ac5eabb, []int{1}
}
func (m *VolumeSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeSpec.Unmarshal(m, b)
}
func (m *VolumeSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeSpec.Marshal(b, m, deterministic)
}
func (dst *VolumeSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeSpec.Merge(dst, src)
}
func (m *VolumeSpec) XXX_Size() int {
	return xxx_messageInfo_VolumeSpec.Size(m)
}
func (m *VolumeSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeSpec.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeSpec proto.InternalMessageInfo

func (m *VolumeSpec) GetStorage() *v01.Storage {
	if m != nil {
		return m.Storage
	}
	return nil
}

type VolumeStatus struct {
	State                VolumeStatus_VolumeState `protobuf:"varint,1,opt,name=state,enum=n0stack.provisioning.VolumeStatus_VolumeState" json:"state,omitempty"`
	NodeName             string                   `protobuf:"bytes,2,opt,name=node_name,json=nodeName" json:"node_name,omitempty"`
	StorageName          string                   `protobuf:"bytes,3,opt,name=storage_name,json=storageName" json:"storage_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *VolumeStatus) Reset()         { *m = VolumeStatus{} }
func (m *VolumeStatus) String() string { return proto.CompactTextString(m) }
func (*VolumeStatus) ProtoMessage()    {}
func (*VolumeStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_volume_e7cf64116ac5eabb, []int{2}
}
func (m *VolumeStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeStatus.Unmarshal(m, b)
}
func (m *VolumeStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeStatus.Marshal(b, m, deterministic)
}
func (dst *VolumeStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeStatus.Merge(dst, src)
}
func (m *VolumeStatus) XXX_Size() int {
	return xxx_messageInfo_VolumeStatus.Size(m)
}
func (m *VolumeStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeStatus.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeStatus proto.InternalMessageInfo

func (m *VolumeStatus) GetState() VolumeStatus_VolumeState {
	if m != nil {
		return m.State
	}
	return VolumeStatus_FAILED
}

func (m *VolumeStatus) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *VolumeStatus) GetStorageName() string {
	if m != nil {
		return m.StorageName
	}
	return ""
}

type ListVolumesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListVolumesRequest) Reset()         { *m = ListVolumesRequest{} }
func (m *ListVolumesRequest) String() string { return proto.CompactTextString(m) }
func (*ListVolumesRequest) ProtoMessage()    {}
func (*ListVolumesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_volume_e7cf64116ac5eabb, []int{3}
}
func (m *ListVolumesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListVolumesRequest.Unmarshal(m, b)
}
func (m *ListVolumesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListVolumesRequest.Marshal(b, m, deterministic)
}
func (dst *ListVolumesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVolumesRequest.Merge(dst, src)
}
func (m *ListVolumesRequest) XXX_Size() int {
	return xxx_messageInfo_ListVolumesRequest.Size(m)
}
func (m *ListVolumesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVolumesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListVolumesRequest proto.InternalMessageInfo

type ListVolumesResponse struct {
	Volumes              []*Volume `protobuf:"bytes,1,rep,name=volumes" json:"volumes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListVolumesResponse) Reset()         { *m = ListVolumesResponse{} }
func (m *ListVolumesResponse) String() string { return proto.CompactTextString(m) }
func (*ListVolumesResponse) ProtoMessage()    {}
func (*ListVolumesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_volume_e7cf64116ac5eabb, []int{4}
}
func (m *ListVolumesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListVolumesResponse.Unmarshal(m, b)
}
func (m *ListVolumesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListVolumesResponse.Marshal(b, m, deterministic)
}
func (dst *ListVolumesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVolumesResponse.Merge(dst, src)
}
func (m *ListVolumesResponse) XXX_Size() int {
	return xxx_messageInfo_ListVolumesResponse.Size(m)
}
func (m *ListVolumesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVolumesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListVolumesResponse proto.InternalMessageInfo

func (m *ListVolumesResponse) GetVolumes() []*Volume {
	if m != nil {
		return m.Volumes
	}
	return nil
}

type GetVolumeRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVolumeRequest) Reset()         { *m = GetVolumeRequest{} }
func (m *GetVolumeRequest) String() string { return proto.CompactTextString(m) }
func (*GetVolumeRequest) ProtoMessage()    {}
func (*GetVolumeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_volume_e7cf64116ac5eabb, []int{5}
}
func (m *GetVolumeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVolumeRequest.Unmarshal(m, b)
}
func (m *GetVolumeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVolumeRequest.Marshal(b, m, deterministic)
}
func (dst *GetVolumeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVolumeRequest.Merge(dst, src)
}
func (m *GetVolumeRequest) XXX_Size() int {
	return xxx_messageInfo_GetVolumeRequest.Size(m)
}
func (m *GetVolumeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVolumeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVolumeRequest proto.InternalMessageInfo

func (m *GetVolumeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ApplyVolumeRequest struct {
	Metadata             *v0.Metadata `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	Spec                 *VolumeSpec  `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ApplyVolumeRequest) Reset()         { *m = ApplyVolumeRequest{} }
func (m *ApplyVolumeRequest) String() string { return proto.CompactTextString(m) }
func (*ApplyVolumeRequest) ProtoMessage()    {}
func (*ApplyVolumeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_volume_e7cf64116ac5eabb, []int{6}
}
func (m *ApplyVolumeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyVolumeRequest.Unmarshal(m, b)
}
func (m *ApplyVolumeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyVolumeRequest.Marshal(b, m, deterministic)
}
func (dst *ApplyVolumeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyVolumeRequest.Merge(dst, src)
}
func (m *ApplyVolumeRequest) XXX_Size() int {
	return xxx_messageInfo_ApplyVolumeRequest.Size(m)
}
func (m *ApplyVolumeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyVolumeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyVolumeRequest proto.InternalMessageInfo

func (m *ApplyVolumeRequest) GetMetadata() *v0.Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *ApplyVolumeRequest) GetSpec() *VolumeSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type DeleteVolumeRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteVolumeRequest) Reset()         { *m = DeleteVolumeRequest{} }
func (m *DeleteVolumeRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteVolumeRequest) ProtoMessage()    {}
func (*DeleteVolumeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_volume_e7cf64116ac5eabb, []int{7}
}
func (m *DeleteVolumeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVolumeRequest.Unmarshal(m, b)
}
func (m *DeleteVolumeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVolumeRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteVolumeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVolumeRequest.Merge(dst, src)
}
func (m *DeleteVolumeRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteVolumeRequest.Size(m)
}
func (m *DeleteVolumeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVolumeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVolumeRequest proto.InternalMessageInfo

func (m *DeleteVolumeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DownloadVolumeRequest struct {
	Metadata             *v0.Metadata `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	Spec                 *VolumeSpec  `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	SourceUrl            string       `protobuf:"bytes,3,opt,name=source_url,json=sourceUrl" json:"source_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DownloadVolumeRequest) Reset()         { *m = DownloadVolumeRequest{} }
func (m *DownloadVolumeRequest) String() string { return proto.CompactTextString(m) }
func (*DownloadVolumeRequest) ProtoMessage()    {}
func (*DownloadVolumeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_volume_e7cf64116ac5eabb, []int{8}
}
func (m *DownloadVolumeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadVolumeRequest.Unmarshal(m, b)
}
func (m *DownloadVolumeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadVolumeRequest.Marshal(b, m, deterministic)
}
func (dst *DownloadVolumeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadVolumeRequest.Merge(dst, src)
}
func (m *DownloadVolumeRequest) XXX_Size() int {
	return xxx_messageInfo_DownloadVolumeRequest.Size(m)
}
func (m *DownloadVolumeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadVolumeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadVolumeRequest proto.InternalMessageInfo

func (m *DownloadVolumeRequest) GetMetadata() *v0.Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *DownloadVolumeRequest) GetSpec() *VolumeSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *DownloadVolumeRequest) GetSourceUrl() string {
	if m != nil {
		return m.SourceUrl
	}
	return ""
}

func init() {
	proto.RegisterType((*Volume)(nil), "n0stack.provisioning.Volume")
	proto.RegisterType((*VolumeSpec)(nil), "n0stack.provisioning.VolumeSpec")
	proto.RegisterType((*VolumeStatus)(nil), "n0stack.provisioning.VolumeStatus")
	proto.RegisterType((*ListVolumesRequest)(nil), "n0stack.provisioning.ListVolumesRequest")
	proto.RegisterType((*ListVolumesResponse)(nil), "n0stack.provisioning.ListVolumesResponse")
	proto.RegisterType((*GetVolumeRequest)(nil), "n0stack.provisioning.GetVolumeRequest")
	proto.RegisterType((*ApplyVolumeRequest)(nil), "n0stack.provisioning.ApplyVolumeRequest")
	proto.RegisterType((*DeleteVolumeRequest)(nil), "n0stack.provisioning.DeleteVolumeRequest")
	proto.RegisterType((*DownloadVolumeRequest)(nil), "n0stack.provisioning.DownloadVolumeRequest")
	proto.RegisterEnum("n0stack.provisioning.VolumeStatus_VolumeState", VolumeStatus_VolumeState_name, VolumeStatus_VolumeState_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for VolumeService service

type VolumeServiceClient interface {
	ListVolumes(ctx context.Context, in *ListVolumesRequest, opts ...grpc.CallOption) (*ListVolumesResponse, error)
	GetVolume(ctx context.Context, in *GetVolumeRequest, opts ...grpc.CallOption) (*Volume, error)
	ApplyVolume(ctx context.Context, in *ApplyVolumeRequest, opts ...grpc.CallOption) (*Volume, error)
	DeleteVolume(ctx context.Context, in *DeleteVolumeRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DownloadVolume(ctx context.Context, in *DownloadVolumeRequest, opts ...grpc.CallOption) (*Volume, error)
}

type volumeServiceClient struct {
	cc *grpc.ClientConn
}

func NewVolumeServiceClient(cc *grpc.ClientConn) VolumeServiceClient {
	return &volumeServiceClient{cc}
}

func (c *volumeServiceClient) ListVolumes(ctx context.Context, in *ListVolumesRequest, opts ...grpc.CallOption) (*ListVolumesResponse, error) {
	out := new(ListVolumesResponse)
	err := grpc.Invoke(ctx, "/n0stack.provisioning.VolumeService/ListVolumes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *volumeServiceClient) GetVolume(ctx context.Context, in *GetVolumeRequest, opts ...grpc.CallOption) (*Volume, error) {
	out := new(Volume)
	err := grpc.Invoke(ctx, "/n0stack.provisioning.VolumeService/GetVolume", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *volumeServiceClient) ApplyVolume(ctx context.Context, in *ApplyVolumeRequest, opts ...grpc.CallOption) (*Volume, error) {
	out := new(Volume)
	err := grpc.Invoke(ctx, "/n0stack.provisioning.VolumeService/ApplyVolume", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *volumeServiceClient) DeleteVolume(ctx context.Context, in *DeleteVolumeRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/n0stack.provisioning.VolumeService/DeleteVolume", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *volumeServiceClient) DownloadVolume(ctx context.Context, in *DownloadVolumeRequest, opts ...grpc.CallOption) (*Volume, error) {
	out := new(Volume)
	err := grpc.Invoke(ctx, "/n0stack.provisioning.VolumeService/DownloadVolume", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for VolumeService service

type VolumeServiceServer interface {
	ListVolumes(context.Context, *ListVolumesRequest) (*ListVolumesResponse, error)
	GetVolume(context.Context, *GetVolumeRequest) (*Volume, error)
	ApplyVolume(context.Context, *ApplyVolumeRequest) (*Volume, error)
	DeleteVolume(context.Context, *DeleteVolumeRequest) (*empty.Empty, error)
	DownloadVolume(context.Context, *DownloadVolumeRequest) (*Volume, error)
}

func RegisterVolumeServiceServer(s *grpc.Server, srv VolumeServiceServer) {
	s.RegisterService(&_VolumeService_serviceDesc, srv)
}

func _VolumeService_ListVolumes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListVolumesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VolumeServiceServer).ListVolumes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.VolumeService/ListVolumes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VolumeServiceServer).ListVolumes(ctx, req.(*ListVolumesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VolumeService_GetVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVolumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VolumeServiceServer).GetVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.VolumeService/GetVolume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VolumeServiceServer).GetVolume(ctx, req.(*GetVolumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VolumeService_ApplyVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyVolumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VolumeServiceServer).ApplyVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.VolumeService/ApplyVolume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VolumeServiceServer).ApplyVolume(ctx, req.(*ApplyVolumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VolumeService_DeleteVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteVolumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VolumeServiceServer).DeleteVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.VolumeService/DeleteVolume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VolumeServiceServer).DeleteVolume(ctx, req.(*DeleteVolumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VolumeService_DownloadVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DownloadVolumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VolumeServiceServer).DownloadVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.provisioning.VolumeService/DownloadVolume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VolumeServiceServer).DownloadVolume(ctx, req.(*DownloadVolumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VolumeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "n0stack.provisioning.VolumeService",
	HandlerType: (*VolumeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListVolumes",
			Handler:    _VolumeService_ListVolumes_Handler,
		},
		{
			MethodName: "GetVolume",
			Handler:    _VolumeService_GetVolume_Handler,
		},
		{
			MethodName: "ApplyVolume",
			Handler:    _VolumeService_ApplyVolume_Handler,
		},
		{
			MethodName: "DeleteVolume",
			Handler:    _VolumeService_DeleteVolume_Handler,
		},
		{
			MethodName: "DownloadVolume",
			Handler:    _VolumeService_DownloadVolume_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "provisioning/v0/volume.proto",
}

func init() {
	proto.RegisterFile("provisioning/v0/volume.proto", fileDescriptor_volume_e7cf64116ac5eabb)
}

var fileDescriptor_volume_e7cf64116ac5eabb = []byte{
	// 583 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x55, 0xd1, 0x4e, 0x13, 0x41,
	0x14, 0xed, 0x52, 0x2c, 0xf4, 0x2e, 0x90, 0x72, 0x41, 0x53, 0x0a, 0x26, 0x38, 0x0f, 0x04, 0x62,
	0x9c, 0x25, 0x45, 0x4d, 0x94, 0xa7, 0x92, 0xa2, 0x21, 0x96, 0x9a, 0x6c, 0x03, 0x24, 0x26, 0x86,
	0x2c, 0xdb, 0x71, 0xdd, 0xb8, 0xbb, 0xb3, 0xee, 0xcc, 0xd6, 0xf0, 0x2d, 0x7e, 0x81, 0xdf, 0xe2,
	0x07, 0xf8, 0x3b, 0xa6, 0x33, 0xb3, 0xb8, 0x40, 0xa1, 0x3e, 0xf1, 0xd6, 0xde, 0x39, 0xe7, 0xdc,
	0x73, 0x67, 0x4e, 0xee, 0xc2, 0x46, 0x9a, 0xf1, 0x51, 0x28, 0x42, 0x9e, 0x84, 0x49, 0xe0, 0x8c,
	0x76, 0x9d, 0x11, 0x8f, 0xf2, 0x98, 0xd1, 0x34, 0xe3, 0x92, 0xe3, 0x6a, 0xb2, 0x2b, 0xa4, 0xe7,
	0x7f, 0xa3, 0x65, 0x54, 0x6b, 0x3d, 0xe0, 0x3c, 0x88, 0x98, 0xa3, 0x30, 0x17, 0xf9, 0x17, 0x87,
	0xc5, 0xa9, 0xbc, 0xd4, 0x94, 0xd6, 0x5a, 0xc6, 0x04, 0xcf, 0x33, 0x9f, 0x8d, 0xc5, 0x84, 0xe4,
	0x99, 0x17, 0x18, 0xb5, 0xd6, 0xf2, 0x68, 0xd7, 0x89, 0x99, 0xf4, 0x86, 0x9e, 0xf4, 0x74, 0x89,
	0xfc, 0xb2, 0xa0, 0x76, 0xaa, 0x3a, 0xe2, 0x0b, 0x98, 0x2f, 0x0e, 0x9b, 0xd6, 0xa6, 0xb5, 0x6d,
	0xb7, 0x97, 0x69, 0xd1, 0xfe, 0xd8, 0x1c, 0xb8, 0x57, 0x10, 0x7c, 0x09, 0xb3, 0x22, 0x65, 0x7e,
	0x73, 0x46, 0x41, 0x37, 0xe9, 0x24, 0xa7, 0x54, 0x4b, 0x0f, 0x52, 0xe6, 0xbb, 0x0a, 0x8d, 0x6f,
	0xa1, 0x26, 0xa4, 0x27, 0x73, 0xd1, 0xac, 0x2a, 0x1e, 0xb9, 0x97, 0xa7, 0x90, 0xae, 0x61, 0x90,
	0x0e, 0xc0, 0x3f, 0x3d, 0xdc, 0x83, 0x39, 0x33, 0x9d, 0x71, 0xbb, 0x76, 0x25, 0x55, 0xdc, 0x00,
	0x1d, 0x68, 0x80, 0x5b, 0x20, 0xc9, 0x6f, 0x0b, 0x16, 0xca, 0xda, 0xd8, 0x85, 0x47, 0x63, 0x75,
	0xad, 0xb1, 0xd4, 0xa6, 0xd3, 0xed, 0x94, 0xfe, 0x30, 0x57, 0x93, 0x71, 0x1d, 0xea, 0x09, 0x1f,
	0xb2, 0xf3, 0xc4, 0x8b, 0x99, 0xba, 0x90, 0xba, 0x3b, 0x3f, 0x2e, 0xf4, 0xbd, 0x98, 0xe1, 0x33,
	0x58, 0x30, 0xed, 0xf5, 0x79, 0x55, 0x9d, 0xdb, 0xa6, 0x36, 0x86, 0x90, 0x57, 0x60, 0x97, 0x54,
	0x11, 0xa0, 0xf6, 0xae, 0x73, 0xd4, 0x3b, 0xec, 0x36, 0x2a, 0x68, 0xc3, 0xdc, 0x49, 0xff, 0x43,
	0xff, 0xe3, 0x59, 0xbf, 0x61, 0xe1, 0x22, 0xd4, 0x3b, 0xa7, 0x9d, 0xa3, 0x5e, 0xe7, 0xa0, 0x77,
	0xd8, 0x98, 0x21, 0xab, 0x80, 0xbd, 0x50, 0x48, 0x4d, 0x15, 0x2e, 0xfb, 0x9e, 0x33, 0x21, 0xc9,
	0x31, 0xac, 0x5c, 0xab, 0x8a, 0x94, 0x27, 0x82, 0xe1, 0x6b, 0x98, 0xd3, 0xd1, 0x12, 0x4d, 0x6b,
	0xb3, 0xba, 0x6d, 0xb7, 0x37, 0xee, 0x9b, 0xd5, 0x2d, 0xc0, 0x64, 0x0b, 0x1a, 0xef, 0x99, 0x51,
	0x33, 0x2d, 0x10, 0x61, 0x56, 0x8d, 0x62, 0xa9, 0x51, 0xd4, 0x6f, 0x72, 0x09, 0xd8, 0x49, 0xd3,
	0xe8, 0xf2, 0x3a, 0xf2, 0x21, 0x42, 0x45, 0x76, 0x60, 0xa5, 0xcb, 0x22, 0x26, 0xd9, 0x74, 0x97,
	0x3f, 0x2d, 0x78, 0xdc, 0xe5, 0x3f, 0x92, 0x88, 0x7b, 0xc3, 0x87, 0x77, 0x8a, 0x4f, 0x01, 0x74,
	0x34, 0xcf, 0xf3, 0x2c, 0x32, 0x49, 0xa8, 0xeb, 0xca, 0x49, 0x16, 0xb5, 0xff, 0x54, 0x61, 0xd1,
	0x70, 0x58, 0x36, 0x0a, 0x7d, 0x86, 0x43, 0xb0, 0x4b, 0x8f, 0x89, 0xdb, 0x93, 0xfb, 0xdc, 0x4e,
	0x41, 0x6b, 0xe7, 0x3f, 0x90, 0x3a, 0x19, 0xa4, 0x82, 0x03, 0xa8, 0x5f, 0xbd, 0x31, 0x6e, 0x4d,
	0x66, 0xde, 0x0c, 0x41, 0xeb, 0xde, 0xfc, 0x90, 0x0a, 0x9e, 0x81, 0x5d, 0x0a, 0xc4, 0x5d, 0xd6,
	0x6f, 0x67, 0x66, 0xaa, 0xf0, 0x00, 0x16, 0xca, 0xcf, 0x8d, 0x77, 0x8c, 0x3a, 0x21, 0x12, 0xad,
	0x27, 0x54, 0xaf, 0x4e, 0x5a, 0xac, 0x4e, 0x7a, 0x38, 0x5e, 0x9d, 0xa4, 0x82, 0x9f, 0x61, 0xe9,
	0x7a, 0x2e, 0xf0, 0xf9, 0x1d, 0xb2, 0x93, 0xd2, 0x33, 0xcd, 0xf3, 0xc1, 0xfe, 0xa7, 0x37, 0x41,
	0x28, 0xbf, 0xe6, 0x17, 0xd4, 0xe7, 0xb1, 0x63, 0xb0, 0x7a, 0x81, 0xd3, 0x80, 0x3b, 0x37, 0x3e,
	0x02, 0xfb, 0x69, 0xb9, 0x70, 0x51, 0x53, 0xb8, 0xbd, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xc0,
	0x42, 0x41, 0xb3, 0x2c, 0x06, 0x00, 0x00,
}
