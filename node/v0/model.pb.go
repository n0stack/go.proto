// Code generated by protoc-gen-go. DO NOT EDIT.
// source: node/v0/model.proto

package pnode // import "github.com/n0stack/proto.go/node/v0"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import v0 "github.com/n0stack/proto.go/metadata/v0"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Node struct {
	// MotherBoardのUUIDを用いる
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// n0core起動時のコマンドライン引数から取る
	Metadata *v0.Metadata `protobuf:"bytes,4,opt,name=metadata" json:"metadata,omitempty"`
	// Spec spec = 2;
	Status               *Status  `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_7d2eccddf0cc49ac, []int{0}
}
func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (dst *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(dst, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Node) GetMetadata() *v0.Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Node) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type Status struct {
	Connection           *Connection `protobuf:"bytes,1,opt,name=connection" json:"connection,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_7d2eccddf0cc49ac, []int{1}
}
func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (dst *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(dst, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetConnection() *Connection {
	if m != nil {
		return m.Connection
	}
	return nil
}

type ListNodesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNodesRequest) Reset()         { *m = ListNodesRequest{} }
func (m *ListNodesRequest) String() string { return proto.CompactTextString(m) }
func (*ListNodesRequest) ProtoMessage()    {}
func (*ListNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_7d2eccddf0cc49ac, []int{2}
}
func (m *ListNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodesRequest.Unmarshal(m, b)
}
func (m *ListNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodesRequest.Marshal(b, m, deterministic)
}
func (dst *ListNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodesRequest.Merge(dst, src)
}
func (m *ListNodesRequest) XXX_Size() int {
	return xxx_messageInfo_ListNodesRequest.Size(m)
}
func (m *ListNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodesRequest proto.InternalMessageInfo

type ListNodesResponse struct {
	Nodes                []*Node  `protobuf:"bytes,1,rep,name=nodes" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNodesResponse) Reset()         { *m = ListNodesResponse{} }
func (m *ListNodesResponse) String() string { return proto.CompactTextString(m) }
func (*ListNodesResponse) ProtoMessage()    {}
func (*ListNodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_7d2eccddf0cc49ac, []int{3}
}
func (m *ListNodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodesResponse.Unmarshal(m, b)
}
func (m *ListNodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodesResponse.Marshal(b, m, deterministic)
}
func (dst *ListNodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodesResponse.Merge(dst, src)
}
func (m *ListNodesResponse) XXX_Size() int {
	return xxx_messageInfo_ListNodesResponse.Size(m)
}
func (m *ListNodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodesResponse proto.InternalMessageInfo

func (m *ListNodesResponse) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type GetNodeRequest struct {
	// idがからの場合は自分を返す
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNodeRequest) Reset()         { *m = GetNodeRequest{} }
func (m *GetNodeRequest) String() string { return proto.CompactTextString(m) }
func (*GetNodeRequest) ProtoMessage()    {}
func (*GetNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_7d2eccddf0cc49ac, []int{4}
}
func (m *GetNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeRequest.Unmarshal(m, b)
}
func (m *GetNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeRequest.Marshal(b, m, deterministic)
}
func (dst *GetNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeRequest.Merge(dst, src)
}
func (m *GetNodeRequest) XXX_Size() int {
	return xxx_messageInfo_GetNodeRequest.Size(m)
}
func (m *GetNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeRequest proto.InternalMessageInfo

func (m *GetNodeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Connection struct {
	Address              string   `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	Port                 uint32   `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Connection) Reset()         { *m = Connection{} }
func (m *Connection) String() string { return proto.CompactTextString(m) }
func (*Connection) ProtoMessage()    {}
func (*Connection) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_7d2eccddf0cc49ac, []int{5}
}
func (m *Connection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Connection.Unmarshal(m, b)
}
func (m *Connection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Connection.Marshal(b, m, deterministic)
}
func (dst *Connection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Connection.Merge(dst, src)
}
func (m *Connection) XXX_Size() int {
	return xxx_messageInfo_Connection.Size(m)
}
func (m *Connection) XXX_DiscardUnknown() {
	xxx_messageInfo_Connection.DiscardUnknown(m)
}

var xxx_messageInfo_Connection proto.InternalMessageInfo

func (m *Connection) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Connection) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type GetConnectionRequest struct {
	// nodeのIDを指定する
	NodeId               string   `protobuf:"bytes,1,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConnectionRequest) Reset()         { *m = GetConnectionRequest{} }
func (m *GetConnectionRequest) String() string { return proto.CompactTextString(m) }
func (*GetConnectionRequest) ProtoMessage()    {}
func (*GetConnectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_7d2eccddf0cc49ac, []int{6}
}
func (m *GetConnectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConnectionRequest.Unmarshal(m, b)
}
func (m *GetConnectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConnectionRequest.Marshal(b, m, deterministic)
}
func (dst *GetConnectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConnectionRequest.Merge(dst, src)
}
func (m *GetConnectionRequest) XXX_Size() int {
	return xxx_messageInfo_GetConnectionRequest.Size(m)
}
func (m *GetConnectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConnectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetConnectionRequest proto.InternalMessageInfo

func (m *GetConnectionRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func init() {
	proto.RegisterType((*Node)(nil), "n0stack.node.Node")
	proto.RegisterType((*Status)(nil), "n0stack.node.Status")
	proto.RegisterType((*ListNodesRequest)(nil), "n0stack.node.ListNodesRequest")
	proto.RegisterType((*ListNodesResponse)(nil), "n0stack.node.ListNodesResponse")
	proto.RegisterType((*GetNodeRequest)(nil), "n0stack.node.GetNodeRequest")
	proto.RegisterType((*Connection)(nil), "n0stack.node.Connection")
	proto.RegisterType((*GetConnectionRequest)(nil), "n0stack.node.GetConnectionRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for NodeService service

type NodeServiceClient interface {
	// clusterレベルのList
	// すべてのノードから同じ結果が帰ってくる必要がある
	ListNodes(ctx context.Context, in *ListNodesRequest, opts ...grpc.CallOption) (*ListNodesResponse, error)
	// 指定したIDのNodeオブジェクトをかえす
	GetNode(ctx context.Context, in *GetNodeRequest, opts ...grpc.CallOption) (*Node, error)
	// node idを指定することでエンドポイントの接続情報を得る
	GetConnection(ctx context.Context, in *GetConnectionRequest, opts ...grpc.CallOption) (*Connection, error)
}

type nodeServiceClient struct {
	cc *grpc.ClientConn
}

func NewNodeServiceClient(cc *grpc.ClientConn) NodeServiceClient {
	return &nodeServiceClient{cc}
}

func (c *nodeServiceClient) ListNodes(ctx context.Context, in *ListNodesRequest, opts ...grpc.CallOption) (*ListNodesResponse, error) {
	out := new(ListNodesResponse)
	err := grpc.Invoke(ctx, "/n0stack.node.NodeService/ListNodes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) GetNode(ctx context.Context, in *GetNodeRequest, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := grpc.Invoke(ctx, "/n0stack.node.NodeService/GetNode", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) GetConnection(ctx context.Context, in *GetConnectionRequest, opts ...grpc.CallOption) (*Connection, error) {
	out := new(Connection)
	err := grpc.Invoke(ctx, "/n0stack.node.NodeService/GetConnection", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for NodeService service

type NodeServiceServer interface {
	// clusterレベルのList
	// すべてのノードから同じ結果が帰ってくる必要がある
	ListNodes(context.Context, *ListNodesRequest) (*ListNodesResponse, error)
	// 指定したIDのNodeオブジェクトをかえす
	GetNode(context.Context, *GetNodeRequest) (*Node, error)
	// node idを指定することでエンドポイントの接続情報を得る
	GetConnection(context.Context, *GetConnectionRequest) (*Connection, error)
}

func RegisterNodeServiceServer(s *grpc.Server, srv NodeServiceServer) {
	s.RegisterService(&_NodeService_serviceDesc, srv)
}

func _NodeService_ListNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).ListNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.node.NodeService/ListNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).ListNodes(ctx, req.(*ListNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_GetNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).GetNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.node.NodeService/GetNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).GetNode(ctx, req.(*GetNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_GetConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConnectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).GetConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.node.NodeService/GetConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).GetConnection(ctx, req.(*GetConnectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NodeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "n0stack.node.NodeService",
	HandlerType: (*NodeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListNodes",
			Handler:    _NodeService_ListNodes_Handler,
		},
		{
			MethodName: "GetNode",
			Handler:    _NodeService_GetNode_Handler,
		},
		{
			MethodName: "GetConnection",
			Handler:    _NodeService_GetConnection_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "node/v0/model.proto",
}

func init() { proto.RegisterFile("node/v0/model.proto", fileDescriptor_model_7d2eccddf0cc49ac) }

var fileDescriptor_model_7d2eccddf0cc49ac = []byte{
	// 388 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x52, 0x41, 0xcf, 0xd2, 0x40,
	0x10, 0xa5, 0x80, 0x45, 0xa6, 0x42, 0x74, 0x24, 0xa1, 0x69, 0x8c, 0x36, 0x7b, 0xaa, 0xd1, 0x6c,
	0x49, 0x4d, 0x8c, 0xd1, 0x70, 0xc1, 0x03, 0x31, 0x51, 0x4c, 0xca, 0xcd, 0x8b, 0x29, 0xdd, 0x0d,
	0x36, 0x4a, 0xb7, 0x76, 0x17, 0x4e, 0xfe, 0x65, 0xff, 0xc3, 0x97, 0x2d, 0xdb, 0x7e, 0x2d, 0x7c,
	0xdc, 0xa6, 0xf3, 0xde, 0xbc, 0x99, 0xf7, 0xba, 0xf0, 0x3c, 0x17, 0x8c, 0x87, 0xa7, 0x45, 0x78,
	0x10, 0x8c, 0xff, 0xa1, 0x45, 0x29, 0x94, 0xc0, 0x27, 0xf9, 0x42, 0xaa, 0x24, 0xfd, 0x4d, 0x35,
	0xe8, 0xcd, 0x0f, 0x5c, 0x25, 0x2c, 0x51, 0xc9, 0x05, 0x8d, 0xfc, 0x83, 0xe1, 0x46, 0x30, 0x8e,
	0x53, 0xe8, 0x67, 0xcc, 0xb5, 0x7c, 0x2b, 0x18, 0xc7, 0xfd, 0x8c, 0xe1, 0x7b, 0x78, 0x5c, 0x8f,
	0xb8, 0x43, 0xdf, 0x0a, 0x9c, 0xc8, 0xa3, 0xb5, 0x62, 0x0d, 0xd0, 0x6f, 0xa6, 0x88, 0x1b, 0x2e,
	0xbe, 0x05, 0x5b, 0xaa, 0x44, 0x1d, 0xa5, 0x3b, 0xa8, 0xa6, 0x66, 0xb4, 0x7d, 0x07, 0xdd, 0x56,
	0x58, 0x6c, 0x38, 0x64, 0x05, 0xf6, 0xb9, 0x83, 0x1f, 0x00, 0x52, 0x91, 0xe7, 0x3c, 0x55, 0x99,
	0xc8, 0xab, 0x3b, 0x9c, 0xc8, 0xed, 0xce, 0x7e, 0x6e, 0xf0, 0xb8, 0xc5, 0x25, 0x08, 0x4f, 0xbf,
	0x66, 0x52, 0x69, 0x17, 0x32, 0xe6, 0x7f, 0x8f, 0x5c, 0x2a, 0xb2, 0x84, 0x67, 0xad, 0x9e, 0x2c,
	0x44, 0x2e, 0x39, 0x06, 0xf0, 0x48, 0xeb, 0x48, 0xd7, 0xf2, 0x07, 0x81, 0x13, 0x61, 0x57, 0x5d,
	0x73, 0xe3, 0x33, 0x81, 0xf8, 0x30, 0x5d, 0xf3, 0x6a, 0xda, 0x08, 0x5e, 0xc6, 0x43, 0x3e, 0x02,
	0xdc, 0x9f, 0x83, 0x2e, 0x8c, 0x12, 0xc6, 0x4a, 0x2e, 0xa5, 0xa1, 0xd4, 0x9f, 0x88, 0x30, 0x2c,
	0x44, 0xa9, 0xdc, 0xbe, 0x6f, 0x05, 0x93, 0xb8, 0xaa, 0x49, 0x08, 0xb3, 0x35, 0x57, 0x2d, 0x37,
	0x66, 0xc7, 0x1c, 0x46, 0x7a, 0xfd, 0xcf, 0x66, 0x91, 0xad, 0x3f, 0xbf, 0xb0, 0xe8, 0xbf, 0x05,
	0x8e, 0x3e, 0x66, 0xcb, 0xcb, 0x53, 0x96, 0x72, 0xdc, 0xc0, 0xb8, 0x71, 0x87, 0x2f, 0xbb, 0x36,
	0x2e, 0xa3, 0xf0, 0x5e, 0xdd, 0xc4, 0xcf, 0xb1, 0x90, 0x1e, 0x2e, 0x61, 0x64, 0xec, 0xe2, 0x8b,
	0x2e, 0xbb, 0x9b, 0x82, 0xf7, 0x40, 0x64, 0xa4, 0x87, 0xdf, 0x61, 0xd2, 0xf1, 0x83, 0xe4, 0x4a,
	0xe4, 0xca, 0xac, 0x77, 0xf3, 0xdf, 0x92, 0xde, 0xea, 0xcd, 0x8f, 0xd7, 0xfb, 0x4c, 0xfd, 0x3a,
	0xee, 0x68, 0x2a, 0x0e, 0xa1, 0xe1, 0x85, 0xd5, 0x7b, 0xa5, 0x7b, 0x11, 0x9a, 0xd7, 0xfe, 0xa9,
	0xd0, 0xc5, 0xce, 0xae, 0xfa, 0xef, 0xee, 0x02, 0x00, 0x00, 0xff, 0xff, 0xef, 0x3e, 0xe7, 0x1c,
	0x05, 0x03, 0x00, 0x00,
}
