// Code generated by protoc-gen-go. DO NOT EDIT.
// source: node/v0/model.proto

/*
Package pnode is a generated protocol buffer package.

It is generated from these files:
	node/v0/model.proto

It has these top-level messages:
	Node
	Status
	ListRequest
	ListResponse
	GetRequest
*/
package pnode

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Node struct {
	// MotherBoardのUUIDを用いる
	Id     string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Status *Status `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
}

func (m *Node) Reset()                    { *m = Node{} }
func (m *Node) String() string            { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()               {}
func (*Node) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Node) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Node) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type Status struct {
	// Architectureは全部x64だろうという気持ち
	Vcpus uint32 `protobuf:"varint,1,opt,name=vcpus" json:"vcpus,omitempty"`
	// Memory
	MemoryBytes uint64 `protobuf:"varint,2,opt,name=memory_bytes,json=memoryBytes" json:"memory_bytes,omitempty"`
	// Storage
	StorageBytes uint64 `protobuf:"varint,3,opt,name=storage_bytes,json=storageBytes" json:"storage_bytes,omitempty"`
}

func (m *Status) Reset()                    { *m = Status{} }
func (m *Status) String() string            { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()               {}
func (*Status) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Status) GetVcpus() uint32 {
	if m != nil {
		return m.Vcpus
	}
	return 0
}

func (m *Status) GetMemoryBytes() uint64 {
	if m != nil {
		return m.MemoryBytes
	}
	return 0
}

func (m *Status) GetStorageBytes() uint64 {
	if m != nil {
		return m.StorageBytes
	}
	return 0
}

type ListRequest struct {
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type ListResponse struct {
	Nodes []*Node `protobuf:"bytes,1,rep,name=nodes" json:"nodes,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ListResponse) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type GetRequest struct {
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func init() {
	proto.RegisterType((*Node)(nil), "n0stack.node.Node")
	proto.RegisterType((*Status)(nil), "n0stack.node.Status")
	proto.RegisterType((*ListRequest)(nil), "n0stack.node.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "n0stack.node.ListResponse")
	proto.RegisterType((*GetRequest)(nil), "n0stack.node.GetRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for NodeService service

type NodeServiceClient interface {
	// clusterレベルのList
	// すべてのノードから同じ結果が帰ってくる必要がある
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
	// 自分のNodeオブジェクトを返す
	// IDを指定できるようにしたほうが統一感があるかもしれない
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Node, error)
}

type nodeServiceClient struct {
	cc *grpc.ClientConn
}

func NewNodeServiceClient(cc *grpc.ClientConn) NodeServiceClient {
	return &nodeServiceClient{cc}
}

func (c *nodeServiceClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := grpc.Invoke(ctx, "/n0stack.node.NodeService/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := grpc.Invoke(ctx, "/n0stack.node.NodeService/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for NodeService service

type NodeServiceServer interface {
	// clusterレベルのList
	// すべてのノードから同じ結果が帰ってくる必要がある
	List(context.Context, *ListRequest) (*ListResponse, error)
	// 自分のNodeオブジェクトを返す
	// IDを指定できるようにしたほうが統一感があるかもしれない
	Get(context.Context, *GetRequest) (*Node, error)
}

func RegisterNodeServiceServer(s *grpc.Server, srv NodeServiceServer) {
	s.RegisterService(&_NodeService_serviceDesc, srv)
}

func _NodeService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.node.NodeService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.node.NodeService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NodeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "n0stack.node.NodeService",
	HandlerType: (*NodeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _NodeService_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _NodeService_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "node/v0/model.proto",
}

func init() { proto.RegisterFile("node/v0/model.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 308 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x91, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x9b, 0x36, 0x2d, 0x38, 0x49, 0x3d, 0x8c, 0x3d, 0xc4, 0x9e, 0xea, 0x7a, 0x89, 0x28,
	0x49, 0xa9, 0x08, 0x82, 0x07, 0xa1, 0x08, 0xbd, 0x88, 0x87, 0xed, 0xcd, 0x8b, 0x34, 0xc9, 0x18,
	0x83, 0x26, 0x1b, 0xb3, 0x9b, 0x40, 0x7f, 0x80, 0xff, 0x5b, 0x36, 0x1b, 0xb1, 0x81, 0xde, 0x32,
	0xef, 0x7d, 0x79, 0xf3, 0x96, 0x81, 0xb3, 0x42, 0x24, 0x14, 0x36, 0xcb, 0x30, 0x17, 0x09, 0x7d,
	0x05, 0x65, 0x25, 0x94, 0x40, 0xb7, 0x58, 0x4a, 0xb5, 0x8b, 0x3f, 0x03, 0x6d, 0xb2, 0x27, 0xb0,
	0x5f, 0x44, 0x42, 0x78, 0x0a, 0xc3, 0x2c, 0xf1, 0xac, 0x85, 0xe5, 0x9f, 0xf0, 0x61, 0x96, 0xe0,
	0x0d, 0x4c, 0xa4, 0xda, 0xa9, 0x5a, 0x7a, 0xf6, 0xc2, 0xf2, 0x9d, 0xd5, 0x2c, 0x38, 0xfc, 0x2d,
	0xd8, 0xb6, 0x1e, 0xef, 0x18, 0xf6, 0x0e, 0x13, 0xa3, 0xe0, 0x0c, 0xc6, 0x4d, 0x5c, 0xd6, 0xb2,
	0x8d, 0x9a, 0x72, 0x33, 0xe0, 0x05, 0xb8, 0x39, 0xe5, 0xa2, 0xda, 0xbf, 0x45, 0x7b, 0x45, 0xd2,
	0x1b, 0x2e, 0x2c, 0xdf, 0xe6, 0x8e, 0xd1, 0xd6, 0x5a, 0xc2, 0x4b, 0x98, 0x4a, 0x25, 0xaa, 0x5d,
	0x4a, 0x1d, 0x33, 0x6a, 0x19, 0xb7, 0x13, 0x5b, 0x88, 0x4d, 0xc1, 0x79, 0xce, 0xa4, 0xe2, 0xf4,
	0x5d, 0x93, 0x54, 0xec, 0x1e, 0x5c, 0x33, 0xca, 0x52, 0x14, 0x92, 0xd0, 0x87, 0xb1, 0x6e, 0xa7,
	0x97, 0x8f, 0x7c, 0x67, 0x85, 0xfd, 0xce, 0xfa, 0x9d, 0xdc, 0x00, 0xcc, 0x05, 0xd8, 0xd0, 0x5f,
	0xce, 0xea, 0xc7, 0x02, 0x47, 0xbb, 0x5b, 0xaa, 0x9a, 0x2c, 0x26, 0x7c, 0x04, 0x5b, 0xe7, 0xe2,
	0x79, 0x3f, 0xe0, 0x60, 0xf5, 0x7c, 0x7e, 0xcc, 0x32, 0x35, 0xd8, 0x00, 0xef, 0x60, 0xb4, 0x21,
	0x85, 0x5e, 0x1f, 0xfa, 0xdf, 0x38, 0x3f, 0x52, 0x8d, 0x0d, 0xd6, 0xd7, 0xaf, 0x57, 0x69, 0xa6,
	0x3e, 0xea, 0x28, 0x88, 0x45, 0x1e, 0x76, 0x44, 0x98, 0x0a, 0x73, 0xb9, 0xb0, 0xbb, 0xe6, 0x43,
	0xa9, 0x3f, 0xa2, 0x49, 0x2b, 0xde, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0xd8, 0xa9, 0xe3, 0x5d,
	0xe5, 0x01, 0x00, 0x00,
}
